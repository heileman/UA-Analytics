/* Copyright Â© 2013-2015 Academic Dashboards, All Rights Reserved. */ function arcTween(
  a,
  b
) {
  a.attrTween("d", function (a) {
    var c = d3.interpolate(this._current, a);
    return (
      (this._current = a),
      function (a) {
        return b(c(a));
      }
    );
  });
}
var AD = AD || {};
(AD.createNameSpace = function (a) {
  var b = a.split("."),
    c = AD;
  "AD" === b[0] && (b = b.slice(1));
  for (var d = 0; d < b.length; d++) {
    var e = b[d];
    "undefined" == typeof c[e] && (c[e] = {}), (c = c[e]);
  }
  return c;
}),
  AD.createNameSpace("AD.CHARTS"),
  AD.createNameSpace("AD.DASHBOARDS"),
  AD.createNameSpace("AD.UTILS"),
  AD.createNameSpace("AD.UTILS.CHARTPAGE"),
  AD.createNameSpace("AD.CONSTANTS"),
  (AD.CONSTANTS.DEFAULTPALETTE = {
    primary: "rgb(42,54,82)",
    secondary: "rgb(11,22,47)",
  }),
  (AD.CONSTANTS.DEFAULTWIDTH = function () {
    return 960;
  }),
  (AD.CONSTANTS.DEFAULTHEIGHT = function () {
    return 540;
  }),
  (AD.CONSTANTS.DEFAULTMARGIN = function () {
    return { left: 0, right: 0, top: 0, bottom: 0 };
  }),
  (AD.CONSTANTS.DEFAULTFORCEDMARGIN = function () {
    return { left: 30, bottom: 20, right: 30, top: 20 };
  }),
  (AD.CONSTANTS.DEFAULTCOLOR = function () {
    return d3.scale.category10();
  }),
  (AD.CONSTANTS.ANIMATIONLENGTHS = function () {
    return { normal: 500, short: 100, long: 1e3 };
  }),
  (AD.UTILS.chartAdapter = function (a, b) {
    if (
      ((b.chart = new AD.CHARTS[a]()),
      b.chartLayoutData || (b.chartLayoutData = {}),
      (b.chartLayout = new AD.UTILS.CHARTPAGE.chartLayout()),
      b.chartLayout.chart(b.chart).data(b.chartLayoutData),
      b.properties)
    )
      for (key in b.properties) b.chart[key](b.properties[key]);
  }),
  (AD.UTILS.CHARTPAGE.chartLayout = function () {
    var a,
      b,
      c = AD.CONSTANTS.DEFAULTWIDTH(),
      d = AD.CONSTANTS.DEFAULTHEIGHT(),
      e = { chartLayout: {} },
      f = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      g = !0,
      h = {};
    return (
      (h.chart = function (a) {
        return arguments.length ? ((b = a), (g = !0), h) : b;
      }),
      (h.width = function (a) {
        return arguments.length ? ((c = a), h) : c;
      }),
      (h.height = function (a) {
        return arguments.length ? ((d = a), h) : d;
      }),
      (h.selection = function (b) {
        return arguments.length ? ((a = b), (g = !0), h) : a;
      }),
      (h.select = function (b) {
        return arguments.length ? ((a = d3.select(b)), (g = !0), h) : a;
      }),
      (h.animationDuration = function (a) {
        return arguments.length ? ((f = a), h) : f;
      }),
      (h.data = function (a, b) {
        return arguments.length
          ? (b && ((e = { chartLayout: {} }), (g = !0)),
            a.data.chartLayout.footnote &&
              (e.chartLayout.footnote = a.data.chartLayout.footnote),
            a.data.chartLayout.rightNotes &&
              (e.chartLayout.rightNotes = a.data.chartLayout.rightNotes),
            a.data.chartLayout.leftNotes &&
              (e.chartLayout.leftNotes = a.data.chartLayout.leftNotes),
            a.data.chartLayout.title &&
              (e.chartLayout.title = a.data.chartLayout.title),
            a.data.chartCallback && (e.chartCallback = a.data.chartCallback),
            h)
          : e;
      }),
      (h.generate = function (c) {
        a.selectAll("*").remove(),
          (a.wrapper = a
            .append("div")
            .attr("class", "ad-chart-layout-wrapper")),
          (a.container = a.wrapper
            .append("div")
            .attr("class", "ad-chart-layout ad-container")),
          (a.container.title = a.container
            .append("div")
            .attr("class", "ad-chart-layout-title")),
          (a.container.title.div = a.container.title.append("div")),
          (a.container.chart = a.container
            .append("div")
            .attr("class", "ad-chart-layout-chart")),
          b.selection(a.container.chart).update(e.chartCallback),
          (a.container.rightNotes = a.container
            .append("div")
            .attr("class", "ad-chart-layout-right-notes")),
          (a.container.rightNotes.ul = a.container.rightNotes.append("ul")),
          (a.container.leftNotes = a.container
            .append("div")
            .attr("class", "ad-chart-layout-left-notes")),
          (a.container.leftNotes.ul = a.container.leftNotes.append("ul")),
          (a.container.footnote = a.container
            .append("div")
            .attr("class", "ad-chart-layout-footnote")),
          (a.container.footnote.div = a.container.footnote.append("div")),
          (a.container.source = a.container
            .append("div")
            .attr("class", "ad-chart-layout-source")
            .append("ul")),
          (g = !1);
        var d = f;
        return h.animationDuration(0).update(c).animationDuration(d), h;
      }),
      (h.update = function (i) {
        if (!a) return console.warn("chartLayout was not given a selection");
        if (!b) return console.warn("chartLayout was not given a chart");
        g && h.generate(i);
        var j = { top: 10, bottom: 0, left: 0, right: 0 };
        a.wrapper.style("width", c + "px").style("height", d + "px"),
          a.container.title.div.text(e.chartLayout.title).style("opacity", "1"),
          e.chartLayout.title
            ? (j.top += a.container.title.node().getBoundingClientRect().height)
            : a.container.title.div.style("opacity", "0"),
          a.container.footnote.div.text(e.chartLayout.footnote),
          (j.bottom += a.container.footnote
            .node()
            .getBoundingClientRect().height),
          a.container.footnote.style("top", d - j.bottom + "px"),
          !e.chartLayout.rightNotes || e.chartLayout.rightNotes.length < 1
            ? (e.chartLayout.rightNotes = [])
            : (j.right += 0.2 * c + 5);
        var k = a.container.rightNotes.ul
          .selectAll("li.ad-chart-layout-note")
          .data(e.chartLayout.rightNotes);
        k.enter()
          .append("li")
          .attr("class", "ad-chart-layout-note")
          .append("div");
        var l = 0;
        k
          .select("div")
          .text(function (a) {
            return a;
          })
          .each(function () {
            l += this.getBoundingClientRect().height;
          }),
          k.exit().style("opacity", 0).remove(),
          a.container.rightNotes
            .style("width", 0.2 * c + "px")
            .style("height", d - j.top + "px")
            .style("left", 0.8 * c - 5 + "px"),
          k.style(
            "padding-top",
            Math.max(10, (d - l) / (1.8 * k.size())) + "px"
          ),
          !e.chartLayout.leftNotes || e.chartLayout.leftNotes.length < 1
            ? (e.chartLayout.leftNotes = [])
            : (j.left += 0.2 * c);
        var m = a.container.leftNotes.ul
          .selectAll("li.ad-chart-layout-note")
          .data(e.chartLayout.leftNotes);
        m.enter().append("li").attr("class", "ad-chart-layout-note"),
          m.text(function (a) {
            return a;
          }),
          m.exit().style("opacity", 0).remove();
        var n = a.container.leftNotes.ul.node().getBoundingClientRect().height;
        return (
          a.container.leftNotes
            .style("width", 0.2 * c + "px")
            .style("top", (d - n) / 2 + "px"),
          a.container.chart
            .style("left", j.left + 5 + "px")
            .style("top", j.top + "px"),
          b
            .width(c - j.left - j.right - 10)
            .height(d - j.top - j.bottom)
            .animationDuration(f)
            .update(e.chartCallback),
          d3.timer.flush(),
          i && i(),
          h
        );
      }),
      h
    );
  }),
  (AD.UTILS.chartPage = function () {
    var a,
      b,
      c = AD.CONSTANTS.DEFAULTWIDTH(),
      d = 0,
      e = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      f = "forward",
      g = function () {
        var b = {};
        (b.left = "backward" == f ? -c + "px" : c + "px"),
          (a.currentPage = a
            .append("div")
            .attr("class", "ad-chart-page-current-page")
            .style("opacity", 0)
            .style("left", b.left));
      },
      h = {};
    return (
      (h.width = function (a) {
        return arguments.length ? ((c = a), h) : c;
      }),
      (h.computedHeight = function () {
        return d;
      }),
      (h.selection = function (b) {
        return arguments.length ? ((a = b), h) : a;
      }),
      (h.select = function (b) {
        return arguments.length ? ((a = d3.select(b)), h) : a;
      }),
      (h.animationDuration = function (a) {
        return arguments.length ? ((e = a), h) : e;
      }),
      (h.animationType = function (a) {
        return arguments.length ? ((f = a), h) : f;
      }),
      (h.data = function (a) {
        return arguments.length ? ((newData = !0), (b = a), h) : b;
      }),
      (h.update = function (i) {
        if (!a) return console.warn("page was not given a selection");
        var j = {};
        if (
          (newData &&
            ((newData = !1),
            a.currentPage &&
              ((j.left = "backward" == f ? c + "px" : -c + "px"),
              (a.oldPage = a.currentPage)),
            g()),
          (d = 0),
          !b.data.charts || b.data.charts.length < 1)
        )
          return console.warn("chart page was not provided any charts");
        {
          var k = a.currentPage
            .selectAll("div.ad-page-chart-layout")
            .data(b.data.charts);
          k.enter()
            .append("div")
            .attr("class", "ad-page-chart-layout")
            .each(function (a) {
              a.chart.chartLayout &&
                a.chart.chartLayout
                  .select(this)
                  .width(c * a.width)
                  .height(a.height)
                  .animationDuration(0)
                  .update(a.chart.chartLayoutData.chartCallback);
            });
        }
        return (
          k
            .each(function (a) {
              a.chart.chartLayout &&
                a.chart.chartLayout
                  .animationDuration(e)
                  .width(c * a.width)
                  .update(a.chart.chartLayoutData.chartCallback);
            })
            .style("left", function (a) {
              return c * a.x + "px";
            })
            .style("top", function (a) {
              return a.y + "px";
            }),
          a.oldPage &&
            a.oldPage
              .transition()
              .duration(e)
              .style("opacity", 0)
              .style("left", j.left)
              .remove(),
          a.currentPage
            .transition()
            .duration(e)
            .style("opacity", 1)
            .style("left", "0px"),
          d3.timer.flush(),
          i && i(),
          h
        );
      }),
      h
    );
  }),
  AD.createNameSpace("AD.UTILS.CONTROLS"),
  (AD.UTILS.CONTROLS.checkbox = function () {
    var a,
      b = 5,
      c = 0,
      d = 0,
      e = { label: "", state: !1 },
      f = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
        elementChange: function () {},
      },
      g = {};
    return (
      (g.scale = function (a) {
        return arguments.length ? ((b = a), g) : b;
      }),
      (g.selection = function (b) {
        return arguments.length ? ((a = b), g) : a;
      }),
      (g.checked = function (a) {
        return arguments.length ? ((e.state = a), g.update()) : e.state;
      }),
      (g.computedHeight = function () {
        return d;
      }),
      (g.computedWidth = function () {
        return c;
      }),
      (g.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? f[a[0]][a[1]]
                : f[a[0]]["default"]
              : (a[1] ? (f[a[0]][a[1]] = b) : (f[a[0]]["default"] = b), g)
            : f
        );
      }),
      (g.data = function (a) {
        return arguments.length ? ((e = a), g) : e;
      }),
      (g.update = function (h) {
        if (!a) return console.warn("checkbox was not given a selection");
        if (!e) return console.warn("checkboxData is null");
        var i = a.selectAll("g.ad-checkbox-container").data([e]),
          j = i
            .enter()
            .append("g")
            .attr("class", "ad-checkbox-container")
            .on("click", function (a, b) {
              e.state = !e.state;
              for (key in f.elementClick) f.elementClick[key].call(this, a, b);
              for (key in f.elementChange)
                f.elementChange[key].call(this, a, b);
              g.update();
            })
            .on("mouseover", function (a, b) {
              for (key in f.elementMouseover)
                f.elementMouseover[key].call(this, a, b);
            })
            .on("mouseout", function (a, b) {
              for (key in f.elementMouseout)
                f.elementMouseout[key].call(this, a, b);
            });
        j.append("rect").attr("rx", 1),
          j.append("path"),
          j.append("text").text(function (a) {
            return a.label;
          });
        var k = i
            .select("text")
            .attr("y", 2.1 * b)
            .style("font-size", 2.5 * b + "px"),
          l = k.node().getComputedTextLength(),
          m = b;
        l += m;
        var n = "translate(" + l + ",0)",
          o = i
            .select("path")
            .attr("transform", n)
            .attr(
              "d",
              "M" +
                0.38 * b +
                "," +
                1.06 * b +
                " l" +
                0.7 * b +
                "," +
                0.5 * b +
                " l" +
                0.58 * b +
                "," +
                -1.19 * b
            )
            .style("stroke-width", 0.4 * b)
            .attr("stroke-dasharray", 2.2 * b);
        o.transition()
          .duration(AD.CONSTANTS.ANIMATIONLENGTHS()["short"])
          .attr("stroke-dashoffset", e.state ? 0 : 2.2 * b);
        i.select("rect")
          .attr("width", 2.1 * b + "px")
          .attr("height", 2.1 * b + "px")
          .attr("transform", n)
          .style("stroke-width", 0.4 * b);
        return (c = l + 2.1 * b), (d = 2.5 * b), h && h(), g;
      }),
      g
    );
  }),
  (AD.UTILS.CONTROLS.horizontalControls = function () {
    var a,
      b,
      c = AD.CONSTANTS.DEFAULTWIDTH(),
      d = (AD.CONSTANTS.DEFAULTCOLOR(), 0),
      e = 0,
      f = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      g = 5,
      h = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
        elementChange: function () {},
      },
      i = {};
    return (
      (i.width = function (a) {
        return arguments.length ? ((c = a), i) : c;
      }),
      (i.computedHeight = function () {
        return e;
      }),
      (i.computedWidth = function () {
        return d;
      }),
      (i.selection = function (b) {
        return arguments.length ? ((a = b), i) : a;
      }),
      (i.scale = function (a) {
        return arguments.length ? ((g = a), i) : g;
      }),
      (i.animationDuration = function (a) {
        return arguments.length ? ((f = a), i) : f;
      }),
      (i.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? h[a[0]][a[1]]
                : h[a[0]]["default"]
              : (a[1] ? (h[a[0]][a[1]] = b) : (h[a[0]]["default"] = b), i)
            : h
        );
      }),
      (i.data = function (a) {
        return arguments.length ? ((b = a), i) : b;
      }),
      (i.update = function (i) {
        if (!a) return console.warn("controls was not given a selection");
        var j = 3 * g,
          k = g;
        if (((e = 0), (d = 0), b.length > 0)) {
          var l = a.selectAll("g.ad-control").data(b, function (a) {
            return a.label + "," + a.type;
          });
          l.enter()
            .append("g")
            .attr("class", "ad-control")
            .each(function (a) {
              (a.control = new AD.UTILS.CONTROLS[a.type]()),
                a.control
                  .selection(d3.select(this))
                  .on("elementClick", function (a, b) {
                    for (key in h.elementClick)
                      h.elementClick[key].call(this, a, b);
                  })
                  .on("elementChange", function (a, b) {
                    for (key in h.elementChange)
                      h.elementChange[key].call(this, a, b);
                  })
                  .on("elementMouseover", function (a, b) {
                    for (key in h.elementMouseover)
                      h.elementMouseover[key].call(this, a, b);
                  })
                  .on("elementMouseout", function (a, b) {
                    for (key in h.elementMouseout)
                      h.elementMouseout[key].call(this, a, b);
                  });
            });
          var m = 0;
          l.each(function (a) {
            a.control.scale(g).data(a.data).update(),
              d + a.control.computedWidth() > c &&
                ((d = 0), (e += m + k), (m = 0)),
              d3
                .select(this)
                .style("opacity", 1)
                .attr("transform", "translate(" + d + "," + e + ")"),
              (d += a.control.computedWidth() + j),
              m < a.control.computedHeight() &&
                (m = a.control.computedHeight());
          }),
            (d -= j),
            (e += m),
            l.exit().transition().duration(f).style("opacity", 0).remove();
        }
        return l;
      }),
      i
    );
  }),
  AD.createNameSpace("AD.UTILS.SHAPES"),
  (AD.UTILS.createGeneralTooltip = function (a, b, c) {
    var d = d3.select("body"),
      e = d
        .append("div")
        .attr("class", "ad-general-tooltip")
        .html(b + ": " + c)
        .style("opacity", 0);
    e.transition().duration(50).style("opacity", 1);
    var f = AD.UTILS.scrollOffset(),
      g = d.node().getBoundingClientRect().width,
      h = { left: 0, top: 0 };
    return (
      (h.left =
        f.left + d3.event.clientX < g / 2
          ? f.left + d3.event.clientX + 10
          : f.left +
            d3.event.clientX -
            e.node().getBoundingClientRect().width -
            10),
      (h.top = f.top + d3.event.clientY - 10),
      AD.UTILS.moveTooltip(e, h.left, h.top, 0),
      a.on("mousemove", function () {
        (f = AD.UTILS.scrollOffset()),
          (h.left =
            f.left + d3.event.clientX < g / 2
              ? f.left + d3.event.clientX + 10
              : f.left +
                d3.event.clientX -
                e.node().getBoundingClientRect().width -
                10),
          (h.top = f.top + d3.event.clientY - 10),
          AD.UTILS.moveTooltip(e, h.left, h.top, 50);
      }),
      e
    );
  }),
  (AD.UTILS.removeTooltip = function () {
    d3.selectAll(".ad-general-tooltip").remove();
  }),
  (AD.UTILS.moveTooltip = function (a, b, c, d) {
    a
      .transition()
      .duration(d)
      .ease("linear")
      .style("opacity", 1)
      .style("top", c + "px")
      .style("left", b + "px"),
      d3.timer.flush();
  }),
  (AD.UTILS.scrollOffset = function () {
    var a = document.documentElement,
      b = (window.pageXOffset || a.scrollLeft) - (a.clientLeft || 0),
      c = (window.pageYOffset || a.scrollTop) - (a.clientTop || 0);
    return { top: c, left: b };
  }),
  (AD.UTILS.getValues = function (a) {
    var b = [];
    for (var c in a) (a[c].key = c), b.push(a[c]);
    return b;
  }),
  AD.createNameSpace("AD.UTILS.AXISCHARTS"),
  (AD.UTILS.AXISCHARTS.getDomainLinear = function (a) {
    return [d3.min(a) < 0 ? d3.min(a) : 0, d3.max(a) + 1];
  }),
  (AD.UTILS.AXISCHARTS.getDomainOrdinal = function (a) {
    return d3.set(a).values();
  }),
  (AD.UTILS.niceFormat = function (a, b) {
    b || (b = 0);
    var c = d3.format("." + b + "f");
    return (
      (absValue = Math.abs(a)),
      isNaN(a)
        ? a
        : absValue < Math.pow(10, 3)
        ? c(absValue)
        : absValue < Math.pow(10, 6)
        ? c(absValue / Math.pow(10, 3)) + " thousand"
        : absValue < Math.pow(10, 9)
        ? c(absValue / Math.pow(10, 6)) + " million"
        : absValue < Math.pow(10, 12)
        ? c(absValue / Math.pow(10, 9)) + " billion"
        : absValue < Math.pow(10, 15)
        ? c(absValue / Math.pow(10, 12)) + " trillion"
        : absValue < Math.pow(10, 18)
        ? c(absValue / Math.pow(10, 15)) + " quadrillion"
        : absValue < Math.pow(10, 21)
        ? c(absValue / Math.pow(10, 18)) + " quintillion"
        : absValue < Math.pow(10, 24)
        ? c(absValue / Math.pow(10, 21)) + " sextillion"
        : absValue < Math.pow(10, 27)
        ? c(absValue / Math.pow(10, 24)) + " septillion"
        : absValue < Math.pow(10, 30)
        ? c(absValue / Math.pow(10, 27)) + " octillion"
        : absValue < Math.pow(10, 33)
        ? c(absValue / Math.pow(10, 30)) + " nonillion"
        : absValue < Math.pow(10, 36)
        ? c(absValue / Math.pow(10, 33)) + " decillion"
        : absValue < Math.pow(10, 39)
        ? c(absValue / Math.pow(10, 36)) + " undecillion"
        : absValue < Math.pow(10, 42)
        ? c(absValue / Math.pow(10, 39)) + " duodecillion"
        : absValue < Math.pow(10, 45)
        ? c(absValue / Math.pow(10, 42)) + " tredecillion"
        : absValue < Math.pow(10, 48)
        ? c(absValue / Math.pow(10, 45)) + " quattuordecillion"
        : absValue < Math.pow(10, 51)
        ? c(absValue / Math.pow(10, 48)) + " quindecillion"
        : absValue < Math.pow(10, 54)
        ? c(absValue / Math.pow(10, 51)) + " sexdecillion"
        : absValue < Math.pow(10, 57)
        ? c(absValue / Math.pow(10, 54)) + " septendecillion"
        : absValue < Math.pow(10, 60)
        ? c(absValue / Math.pow(10, 57)) + " octdecillion"
        : absValue < Math.pow(10, 63)
        ? c(absValue / Math.pow(10, 60)) + " novemdecillion"
        : absValue < Math.pow(10, 303)
        ? c(absValue / Math.pow(10, 63)) + " vigintillion"
        : c(absValue / Math.pow(10, 303)) + " centillion"
    );
  }),
  (AD.UTILS.numberFormat = function (a) {
    var b,
      c = "",
      d = {
        before: a.units.before ? a.units.before : "",
        after: a.units.after ? a.units.after : "",
      };
    return a.nice
      ? function (b) {
          return d.before + AD.UTILS.niceFormat(b, a.precision) + d.after;
        }
      : (a.siPrefixed
          ? (a.precision > -1 && (c += "." + a.precision), (c += "s"))
          : (a.separateThousands && (c += ","),
            a.precision > -1 && (c += "." + a.precision + "f")),
        (b = d3.format(c)),
        function (a) {
          return isNaN(a) ? d.before + a + d.after : d.before + b(a) + d.after;
        });
  }),
  (AD.UTILS.textWrap = function (a, b) {
    a.each(function () {
      for (
        var a,
          c = d3.select(this),
          d = c.text().split(/\s+/).reverse(),
          e = [],
          f = 0,
          g = 1.1,
          h = c.attr("y"),
          i = parseFloat(c.attr("dy")),
          j = c
            .text(null)
            .append("tspan")
            .attr("x", 0)
            .attr("y", h)
            .attr("dy", i + "em");
        (a = d.pop());

      )
        e.push(a),
          j.text(e.join(" ")),
          j.node().getComputedTextLength() > b &&
            (e.pop(),
            j.text(e.join(" ")),
            (e = [a]),
            (j = c
              .append("tspan")
              .attr("x", 0)
              .attr("y", h)
              .attr("dy", ++f * g + i + "em")
              .text(a)));
    });
  }),
  AD.createNameSpace("AD.UTILS.LEGENDS"),
  (AD.UTILS.LEGENDS.legend = function () {
    var a,
      b,
      c = AD.CONSTANTS.DEFAULTWIDTH(),
      d = AD.CONSTANTS.DEFAULTHEIGHT(),
      e = [],
      f = AD.CONSTANTS.DEFAULTCOLOR(),
      g = 0,
      h = 0,
      i = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      j = "horizontal",
      k = 5,
      l = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
      },
      m = {};
    return (
      (m.items = function (a) {
        return arguments.length ? ((e = a), m) : e;
      }),
      (m.width = function (a) {
        return arguments.length ? ((c = a), m) : c;
      }),
      (m.height = function (a) {
        return arguments.length ? ((d = a), m) : d;
      }),
      (m.computedHeight = function () {
        return h;
      }),
      (m.computedWidth = function () {
        return g;
      }),
      (m.color = function (a) {
        return arguments.length ? ((f = a), m) : f;
      }),
      (m.selection = function (b) {
        return arguments.length ? ((a = b), m) : a;
      }),
      (m.select = function (b) {
        return arguments.length ? ((a = d3.select(b)), m) : a;
      }),
      (m.animationDuration = function (a) {
        return arguments.length ? ((i = a), m) : i;
      }),
      (m.scale = function (a) {
        return arguments.length ? ((k = a), m) : k;
      }),
      (m.orientation = function (a) {
        return arguments.length ? ((j = a), m) : j;
      }),
      (m.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? l[a[0]][a[1]]
                : l[a[0]]["default"]
              : (a[1] ? (l[a[0]][a[1]] = b) : (l[a[0]]["default"] = b), m)
            : l
        );
      }),
      (m.data = function (a) {
        return arguments.length ? ((b = a.data), m) : b;
      }),
      (m.update = function (e) {
        if (!a) return console.warn("legend was not given a selection");
        (h = 0), (g = 0);
        var n = a.selectAll("g.ad-legend-item").data(b.items, function (a) {
            return a.label;
          }),
          o = n
            .enter()
            .append("g")
            .attr("class", "ad-legend-item")
            .style("opacity", 0)
            .on("mouseover", function (a, b) {
              for (key in l.elementMouseover)
                l.elementMouseover[key].call(this, a, b);
            })
            .on("mouseout", function (a, b) {
              for (key in l.elementMouseout)
                l.elementMouseout[key].call(this, a, b);
            })
            .on("click", function (a, b) {
              for (key in l.elementClick) l.elementClick[key].call(this, a, b);
            });
        o.append("circle").attr("fill", function (a) {
          return a.color || f(a.colorKey ? a.colorKey : a.label);
        }),
          o.append("text").text(function (a) {
            return a.label;
          });
        var p =
          (n
            .select("circle")
            .attr("r", k)
            .attr("y", k / 2),
          n
            .select("text")
            .style("font-size", 2.5 * k + "px")
            .attr("x", 2 * k)
            .attr("y", k));
        if (b.items.length > 0)
          if ("vertical" == j) {
            var q = 0,
              r = 0,
              s = 0;
            n
              .transition()
              .duration(i)
              .style("opacity", 1)
              .attr("transform", function () {
                var a = "translate(" + q + "," + r + ")";
                return (
                  (r += 4 * k),
                  (s = Math.max(
                    s,
                    d3
                      .select(this)
                      .select("text")
                      .node()
                      .getComputedTextLength()
                  )),
                  r > d && ((r = 0), (q += s + 6 * k), (s = 0)),
                  a
                );
              }),
              (g = q + s + 6 * k),
              (h = 0 == q ? r : d);
          } else {
            var s = 0;
            p.each(function () {
              var a = this.getComputedTextLength();
              a > s && (s = a);
            }),
              (s += 6 * k);
            var t = Math.floor(c / s),
              q = 0,
              r = 0;
            n
              .transition()
              .duration(i)
              .style("opacity", 1)
              .attr("transform", function (a, b) {
                b % t == 0 && ((q = 0), (r += 4 * k));
                var c = "translate(" + q + "," + r + ")";
                return (q += s), c;
              }),
              (h = r),
              (g = n[0].length >= t ? s * t : s * n[0].length);
          }
        return (
          n.exit().transition().duration(i).style("opacity", 0).remove(),
          e && e(),
          m
        );
      }),
      m
    );
  }),
  (AD.UTILS.breadcrumbs = function () {
    var a,
      b = AD.CONSTANTS.DEFAULTWIDTH(),
      c = (AD.CONSTANTS.DEFAULTCOLOR(), { items: [] }),
      d = 0,
      e = 0,
      f = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      g = 5,
      h = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
      },
      j = {};
    return (
      (j.width = function (a) {
        return arguments.length ? ((b = a), j) : b;
      }),
      (j.computedHeight = function () {
        return e;
      }),
      (j.computedWidth = function () {
        return d;
      }),
      (j.selection = function (b) {
        return arguments.length ? ((a = b), j) : a;
      }),
      (j.scale = function (a) {
        return arguments.length ? ((g = a), j) : g;
      }),
      (j.animationDuration = function (a) {
        return arguments.length ? ((f = a), j) : f;
      }),
      (j.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? h[a[0]][a[1]]
                : h[a[0]]["default"]
              : (a[1] ? (h[a[0]][a[1]] = b) : (h[a[0]]["default"] = b), j)
            : h
        );
      }),
      (j.data = function (a) {
        return arguments.length ? ((c = a.data), j) : c;
      }),
      (j.update = function (b) {
        if (!a) return console.warn("breadcrumbs was not given a selection");
        a.breadcrumb = a
          .selectAll("g.ad-breadcrumb")
          .data(c.items, function (a) {
            return a.key ? a.key : i;
          });
        var d = a.breadcrumb
          .enter()
          .append("g")
          .attr("class", "ad-breadcrumb")
          .style("opacity", 0);
        d.append("path"), d.append("text");
        var h = g,
          k = g,
          l = 4 * g;
        (a.breadcrumb.text = a.breadcrumb
          .select("text")
          .text(function (a) {
            return a.label;
          })
          .attr("x", k + h)
          .attr("y", 2.9 * g)
          .style("font-size", 2.5 * g + "px")),
          (a.breadcrumb.path = a.breadcrumb.select("path"));
        var m = 0;
        return (
          a.breadcrumb.each(function (b, c) {
            var d = d3.select(this);
            (d.text = d.select("text")), (d.path = d.select("path"));
            var e = d.text.node().getComputedTextLength() + 2 * k + h,
              g = h,
              i = h;
            0 == c && (g = 0),
              c == a.breadcrumb.size() - 1 && (i = 0),
              d.path
                .transition()
                .duration(f / 2)
                .attr(
                  "d",
                  "M 0 0 L " +
                    g +
                    " " +
                    l / 2 +
                    " L 0 " +
                    l +
                    " L " +
                    e +
                    " " +
                    l +
                    " L " +
                    (e + i) +
                    " " +
                    l / 2 +
                    " L " +
                    e +
                    " 0 L 0 0 Z"
                ),
              d
                .transition()
                .duration(f / 2)
                .style("opacity", 1)
                .attr("transform", "translate(" + m + ",0)"),
              (m += h + e);
          }),
          (e = l),
          a.breadcrumb
            .exit()
            .transition()
            .duration(f / 4)
            .style("opacity", 0)
            .remove(),
          j
        );
      }),
      j
    );
  }),
  (AD.CHARTS.sunburstChart = function () {
    var a = AD.CONSTANTS.DEFAULTWIDTH(),
      b = AD.CONSTANTS.DEFAULTHEIGHT(),
      c = b,
      d = a,
      e = !0,
      f = d3.select("body"),
      g = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      h = AD.CONSTANTS.DEFAULTFORCEDMARGIN(),
      j = new AD.UTILS.LEGENDS.legend(),
      k = new AD.UTILS.CONTROLS.horizontalControls(),
      l = "bottom",
      m = new AD.UTILS.breadcrumbs();
    m.scale(6);
    var n,
      o,
      p = AD.CONSTANTS.DEFAULTCOLOR(),
      q = { data: { partition: {} } },
      r = !0,
      s = function (a) {
        return a;
      },
      t = d3.svg
        .arc()
        .startAngle(function (a) {
          return Math.max(0, Math.min(2 * Math.PI, a.start));
        })
        .endAngle(function (a) {
          return Math.max(0, Math.min(2 * Math.PI, a.end));
        })
        .innerRadius(function (a) {
          return Math.max(0, a.inner);
        })
        .outerRadius(function (a) {
          return Math.max(0, a.outer);
        }),
      u = {},
      v = {
        children: d3.scale.pow().exponent(0.8),
        parents: d3.scale.linear(),
      },
      w = d3.scale.linear().range([0, 2 * Math.PI]),
      x = {
        invert: { label: "Invert", type: "checkbox", visible: !1, enabled: !1 },
        sort: { label: "Sort", type: "checkbox", visible: !1, enabled: !1 },
        hideLegend: {
          label: "Hide Legend",
          type: "checkbox",
          visible: !1,
          enabled: !1,
        },
      },
      y = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
      },
      z = function (a) {
        for (var b = [], c = a; c.parent; ) b.unshift(c), (c = c.parent);
        return b.unshift(c), b;
      },
      A = function (a) {
        var b = z(a).reverse();
        for (i = 0; i < b.length; i++)
          if (b[i].top) return d3.rgb(p(b[i].name)).brighter(0.1 * i);
        return p(a.name);
      },
      B = function (a) {
        var b = z(a);
        f.group.sunburst.arcs.arc
          .filter(function (a) {
            return b.indexOf(a) >= 0;
          })
          .transition()
          .duration(g / 7)
          .style("opacity", 1),
          f.group.sunburst.arcs.arc
            .filter(function (a) {
              return b.indexOf(a) < 0;
            })
            .transition()
            .duration(g / 7)
            .style("opacity", 0.4),
          M(b);
      };
    (B.children = function (a) {
      E(a, !0);
    }),
      (B.parents = function (a) {
        E(a, !1);
      });
    var C = function () {
        K(),
          f.group.sunburst.arcs.arc
            .transition()
            .duration(g / 5)
            .style("opacity", 1),
          D();
      },
      D = function () {
        E(o, !1);
      },
      E = function (a, b) {
        var c = a.name,
          d = s(a.value);
        b && (d += " / " + d3.format(".2%")(a.value / o.value)),
          f.group.sunburst.tooltip.text.selectAll("*").remove(),
          f.group.sunburst.tooltip.text.append("tspan").text(c),
          f.group.sunburst.tooltip.text
            .append("tspan")
            .attr("y", 30)
            .attr("x", 0)
            .text(d);
      },
      F = function (a) {
        (o = a), I();
      },
      G = function (a) {
        var b = a,
          c = [1, 0];
        do
          c[0] > b.y && (c[0] = b.y),
            c[1] < b.y + b.dy && (c[1] = b.y + b.dy),
            (b = b.parent);
        while (b);
        return c;
      },
      H = function (a, b) {
        return (
          b
            ? (b[0] > a.y && (b[0] = a.y),
              b[1] < a.y + a.dy && (b[1] = a.y + a.dy))
            : (b = [1, 0]),
          a.children &&
            a.children.forEach(function (a) {
              return H(a, b);
            }),
          b
        );
      },
      I = function () {
        var a = z(o),
          b = {};
        (b.parents = f.group.sunburst.arcs.arc.path
          .filter(function (b) {
            return a.indexOf(b) >= 0;
          })
          .on("mouseover.updateTooltip", B.parents)),
          w.domain([o.x, o.x + o.dx]),
          v.parents.domain(G(o)),
          v.children.domain(H(o));
        b.parents.each(function (a) {
          (this.newArc = {
            start: w(a.x),
            end: w(a.x + a.dx),
            inner: v.parents(a.y),
            outer: v.parents(a.y + a.dy),
          }),
            this.oldArc ||
              (this.oldArc = {
                start: this.newArc.start,
                end: this.newArc.start,
                inner: this.newArc.inner,
                outer: this.newArc.outer,
              });
        }),
          (b.children = f.group.sunburst.arcs.arc.path
            .filter(function (b) {
              return a.indexOf(b) < 0;
            })
            .on("mouseover.updateTooltip", B.children)),
          b.children.each(function (a) {
            (this.newArc = {
              start: w(a.x),
              end: w(a.x + a.dx),
              inner: v.children(a.y),
              outer: v.children(a.y + a.dy),
            }),
              this.oldArc ||
                (this.oldArc = {
                  start: this.newArc.start,
                  end: this.newArc.start,
                  inner: this.newArc.inner,
                  outer: this.newArc.outer,
                });
          });
        var c = f.group.sunburst.arcs.arc
          .exit()
          .transition()
          .duration(1.5 * g)
          .style("opacity", 0);
        c
          .select("path")
          .each(function () {
            this.newArc = {
              start: this.oldArc.start,
              end: this.oldArc.start,
              inner: this.oldArc.inner,
              outer: this.oldArc.outer,
            };
          })
          .attrTween("d", J),
          c.remove();
        var d = f.group.sunburst.arcs.arc.path
          .transition()
          .duration(1.5 * g)
          .attrTween("d", J);
        d.each("end", function () {
          this.oldArc = this.newArc;
        });
      },
      J = function () {
        function a(a) {
          return (b.oldArc = c(a)), t(b.oldArc);
        }
        var b = this,
          c = d3.interpolate(b.oldArc, b.newArc);
        return a;
      },
      K = function () {
        var a = { data: { items: [] } };
        m.data(a).update();
      },
      L = function (a) {
        a.children &&
          a.children.forEach(function (a, b) {
            (a.index = b), L(a);
          });
      },
      M = function (a) {
        var b = {
          data: {
            items: a.map(function (a, b) {
              return { label: a.name, key: b + "," + a.name, data: a };
            }),
          },
        };
        m.data(b).update(),
          (breadcrumbsSelection = m.selection()),
          breadcrumbsSelection.breadcrumb.path
            .attr("stroke-width", 2)
            .attr("stroke", function (a) {
              return A(a.data);
            });
      },
      N = {};
    return (
      (N.select = function (a) {
        return (f = d3.select(a)), (e = !0), N;
      }),
      (N.selection = function (a) {
        return arguments.length ? ((f = a), (e = !0), N) : f;
      }),
      (N.width = function (b) {
        return arguments.length ? ((a = b), N) : a;
      }),
      (N.height = function (a) {
        return arguments.length ? ((b = a), N) : b;
      }),
      (N.animationDuration = function (a) {
        return arguments.length
          ? ((g = a), j.animationDuration(g), k.animationDuration(g), N)
          : g;
      }),
      (N.xFormat = function (a) {
        return arguments.length ? ((s = AD.UTILS.numberFormat(a)), N) : s;
      }),
      (N.legendOrientation = function (a) {
        return arguments.length ? ((l = a), N) : l;
      }),
      (N.controls = function (a) {
        return arguments.length
          ? (a.invert &&
              ((x.invert.visible =
                null != a.invert.visible ? a.invert.visible : x.invert.visible),
              (x.invert.enabled =
                null != a.invert.enabled
                  ? a.invert.enabled
                  : x.invert.enabled)),
            a.sort &&
              ((x.sort.visible =
                null != a.sort.visible ? a.sort.visible : x.sort.visible),
              (x.sort.enabled =
                null != a.sort.enabled ? a.sort.enabled : x.sort.enabled)),
            a.hideLegend &&
              ((x.hideLegend.visible =
                null != a.hideLegend.visible
                  ? a.hideLegend.visible
                  : x.hideLegend.visible),
              (x.hideLegend.enabled =
                null != a.hideLegend.enabled
                  ? a.hideLegend.enabled
                  : x.hideLegend.enabled)),
            N)
          : x;
      }),
      (N.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? y[a[0]][a[1]]
                : y[a[0]]["default"]
              : (a[1] ? (y[a[0]][a[1]] = b) : (y[a[0]]["default"] = b), N)
            : y
        );
      }),
      (N.data = function (a, b) {
        return arguments.length
          ? (b && ((q = {}), (e = !0)),
            (r = !0),
            (q = a.data),
            L(q.partition),
            (o = q.partition),
            N)
          : q;
      }),
      (N.generate = function (a) {
        (e = !1),
          f.selectAll("*").remove(),
          (f.svg = f
            .append("svg")
            .attr("class", "ad-sunburst-chart ad-svg ad-container")),
          (f.group = f.svg.append("g")),
          (f.group.sunburst = f.group
            .append("g")
            .attr("class", "ad-sunburst")
            .on("mouseout", C)),
          (f.group.sunburst.arcs = f.group.sunburst
            .append("g")
            .attr("class", "ad-sunburst-arcs")),
          (f.group.sunburst.tooltip = f.group.sunburst
            .append("g")
            .attr("class", "ad-sunburst-tooltip")),
          (f.group.sunburst.tooltip.text = f.group.sunburst.tooltip.append(
            "text"
          )),
          (f.group.legend = f.group.append("g").attr("class", "ad-legend")),
          (f.group.breadcrumbs = f.group
            .append("g")
            .attr("class", "ad-sunburst-breadcrumbs")),
          (f.controls = f.group.append("g").attr("class", "ad-controls")),
          k.selection(f.controls).on("elementChange", function (a) {
            (x[a.key].enabled = a.state),
              ("sort" == a.key || "hideLegend" == a.key) && (r = !0),
              N.update();
          }),
          j.color(p).selection(f.group.legend),
          m.selection(f.group.breadcrumbs);
        var b = g;
        return N.animationDuration(0).update(a).animationDuration(b), N;
      }),
      (N.update = function (i) {
        if (e) return N.generate(i);
        if (r) {
          var o;
          (r = !1),
            (o = x.sort.enabled
              ? d3.layout.partition().value(function (a) {
                  return a.size;
                })
              : d3.layout
                  .partition()
                  .value(function (a) {
                    return a.size;
                  })
                  .sort(function (a, b) {
                    return a.index - b.index;
                  })),
            (n = o.nodes(q.partition));
          var p = n.filter(function (a) {
            return a.top;
          });
          if (x.hideLegend.enabled) var s = { data: { items: [] } };
          else
            var s = {
              data: {
                items: d3
                  .set(
                    p.map(function (a) {
                      return a.name;
                    })
                  )
                  .values()
                  .map(function (a) {
                    return { label: a };
                  }),
              },
            };
          j.data(s);
        }
        (h = AD.CONSTANTS.DEFAULTFORCEDMARGIN()),
          f.svg.transition().duration(g).attr("width", a).attr("height", b),
          (d = a - h.right - h.left);
        var t = AD.UTILS.getValues(x).filter(function (a) {
          return a.visible;
        });
        t.map(function (a) {
          a.data = { state: a.enabled, label: a.label, key: a.key };
        }),
          k.data(t).width(d).update(),
          f.group.breadcrumbs
            .transition()
            .duration(g)
            .attr("transform", "translate(" + h.left + "," + h.top + ")"),
          f.controls
            .transition()
            .duration(g)
            .attr(
              "transform",
              "translate(" +
                (h.left + d - k.computedWidth()) +
                "," +
                h.top +
                ")"
            ),
          m.width(d).update(),
          (h.top += Math.max(m.computedHeight(), k.computedHeight())),
          (c = b - h.top - h.bottom),
          "right" == l || "left" == l
            ? j.orientation("vertical").height(c).update()
            : j.orientation("horizontal").width(d).update();
        var w;
        (w =
          "right" == l
            ? "translate(" +
              (h.left + d - j.computedWidth()) +
              "," +
              ((c - j.computedHeight()) / 2 + h.top) +
              ")"
            : "left" == l
            ? "translate(" +
              h.left +
              "," +
              ((c - j.computedHeight()) / 2 + h.top) +
              ")"
            : "top" == l
            ? "translate(" +
              (h.left + (d - j.computedWidth()) / 2) +
              "," +
              h.top +
              ")"
            : "translate(" +
              (h.left + (d - j.computedWidth()) / 2) +
              "," +
              (c + h.top - j.computedHeight()) +
              ")"),
          f.group.legend.transition().duration(g).attr("transform", w),
          (h[l] +=
            "right" == l || "left" == l
              ? j.computedWidth()
              : j.computedHeight()),
          (c = b - h.top - h.bottom),
          (d = a - h.left - h.right),
          f.group.sunburst
            .transition()
            .duration(g)
            .attr(
              "transform",
              "translate(" + (h.left + d / 2) + "," + (h.top + c / 2) + ")"
            ),
          (u.outer = Math.min(d, c) / 2 - 20),
          (u.inner = u.outer / 3),
          x.invert.enabled
            ? (v.children.range([
                u.outer - 0.17 * (u.outer - u.inner),
                u.inner,
              ]),
              v.parents.range([u.outer, u.outer - 0.13 * (u.outer - u.inner)]))
            : (v.children.range([
                u.inner + 0.17 * (u.outer - u.inner),
                u.outer,
              ]),
              v.parents.range([u.inner, u.inner + 0.13 * (u.outer - u.inner)])),
          (f.group.sunburst.arcs.arc = f.group.sunburst.arcs
            .selectAll("g.sunburst-arc")
            .data(n, function (a) {
              return "unique" == a.key
                ? Math.floor(65536 * (1 + Math.random()))
                : a.key && "auto" != a.key
                ? a.key
                : z(a)
                    .map(function (a) {
                      return a.name;
                    })
                    .join("-");
            }));
        {
          var y = f.group.sunburst.arcs.arc
            .enter()
            .append("g")
            .attr("class", "sunburst-arc")
            .style("opacity", 0);
          y.append("path").on("mouseover", B);
        }
        return (
          f.group.sunburst.arcs.arc
            .transition()
            .duration(g)
            .style("opacity", 1),
          (f.group.sunburst.arcs.arc.path = f.group.sunburst.arcs.arc
            .select("path")
            .style("fill", A)),
          f.group.sunburst.arcs.arc.path
            .on("click", F)
            .classed("ad-pointer-element", !0),
          I(),
          D(),
          d3.timer.flush(),
          i && i(),
          N
        );
      }),
      N
    );
  }),
  (AD.CHARTS.bubbleChart = function () {
    var a = AD.CONSTANTS.DEFAULTWIDTH(),
      b = AD.CONSTANTS.DEFAULTHEIGHT(),
      c = b - 55,
      d = b,
      e = a,
      f = !0,
      g = d3.select("body"),
      h = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      i = AD.CONSTANTS.DEFAULTFORCEDMARGIN(),
      j = new AD.UTILS.LEGENDS.legend(),
      k = new AD.UTILS.CONTROLS.horizontalControls(),
      l = "right",
      m = AD.CONSTANTS.DEFAULTCOLOR(),
      n = {},
      o = function (a) {
        return a;
      },
      p = { grouping: null, colorGrouping: null },
      q = 250,
      r = d3.scale.linear(),
      s = d3.scale
        .threshold()
        .domain([-0.25, -0.05, -0.001, 0.001, 0.05, 0.25])
        .range([
          "#d84b2a",
          "#ee9586",
          "#e4b7b2",
          "#888",
          "#beccae",
          "#9caf84",
          "#7aa25c",
        ]),
      t = d3.scale
        .ordinal()
        .domain([-1, -0.25, -0.05, 0, 0.05, 0.25, 1])
        .rangeBands([0, q]),
      u = d3.scale.linear().domain([-0.25, 0.25]),
      v = d3.scale.ordinal(),
      w = {
        x: d3.scale.ordinal(),
        y: d3.scale.ordinal(),
        fontSize: d3.scale.linear().range([10, 30]).domain([0, 500]),
      },
      x = 0,
      y = d3.format("%"),
      z = d3.svg
        .axis()
        .orient("top")
        .tickFormat(function (a) {
          if (a > 0.25 || -0.25 > a) return "";
          if (B.sortByChange.enabled) {
            if (0.25 == a) return y(a) + " or higher";
            if (a == -0.25) return y(a) + " or lower";
          }
          return y(a);
        }),
      A = d3.svg.axis().scale(v).orient("left"),
      B = {
        hideLegend: {
          label: "Hide Legend",
          type: "checkbox",
          visible: !1,
          enabled: !1,
        },
        sortByChange: {
          label: "Sort By Change",
          type: "checkbox",
          visible: !1,
          enabled: !1,
        },
        colorByChange: {
          label: "Color By Change",
          type: "checkbox",
          visible: !1,
          enabled: !1,
        },
      },
      C = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
      },
      D = function (a) {
        var b = 0.095 * a.alpha;
        this.nodeElements.each(function (a) {
          a.group &&
            ((a.y += (a.group.focus.y - a.y) * b),
            (a.x += (a.group.focus.x - a.x) * b));
        });
      },
      E = function (a, b) {
        b || (b = "grouping"),
          n.nodes.forEach(function (c) {
            c[b] = a;
          });
      },
      F = function () {
        n.nodes.forEach(function (a) {
          a.group = p.grouping.groups[a.enrollments[a.grouping.index]];
        });
      },
      G = function (a) {
        r.range([0, Math.min(d, e) / 4]).domain([
          0,
          Math.sqrt(a.total / Math.PI),
        ]);
      },
      H = function (a) {
        return Math.max(3, r(Math.sqrt(a / Math.PI)));
      },
      I = function () {
        g.buttonsWrapper.buttons.button = g.buttonsWrapper.buttons
          .selectAll("ul")
          .data(n.groupings, function (a) {
            return "unique" == a.key
              ? Math.floor(65536 * (1 + Math.random()))
              : a.key && "auto" != a.key
              ? a.key
              : a.label;
          });
        var a = g.buttonsWrapper.buttons.button.enter().append("ul");
        a
          .append("li")
          .attr("class", "ad-button")
          .on("click", function (a) {
            (p.grouping = a), E(a), F(), R.update();
          }),
          a
            .append("li")
            .attr("class", "ad-color-button")
            .on("click", function (a) {
              (p.colorGrouping = a), E(a, "colorGrouping"), R.update();
            }),
          g.buttonsWrapper.buttons.button
            .exit()
            .transition()
            .duration(h)
            .style("opacity", 0)
            .remove(),
          (g.buttonsWrapper.buttons.button.grouping = g.buttonsWrapper.buttons.button
            .select("li.ad-button")
            .text(function (a) {
              return a.label;
            })
            .classed("ad-selected", function (a) {
              return a == p.grouping;
            })),
          (g.buttonsWrapper.buttons.button.color = g.buttonsWrapper.buttons.button
            .select("li.ad-color-button")
            .html('<i class="fa fa-paint-brush"></i>')
            .classed("ad-selected", function (a) {
              return a == p.colorGrouping;
            }));
      },
      J = function () {
        var a = AD.UTILS.getValues(B).filter(function (a) {
          return a.visible;
        });
        a.map(function (a) {
          a.data = { state: a.enabled, label: a.label, key: a.key };
        }),
          k.data(a).width(e).update(),
          g.controls
            .transition()
            .duration(h)
            .attr(
              "transform",
              "translate(" +
                (i.left + e - k.computedWidth()) +
                "," +
                i.top +
                ")"
            );
      },
      K = function () {
        var a;
        (a = B.hideLegend.enabled
          ? { data: { items: [] } }
          : B.colorByChange.enabled
          ? { data: { items: [] } }
          : p.colorGrouping.hideLegend
          ? { data: { items: [] } }
          : {
              data: {
                items: d3
                  .set(
                    p.grouping.nodes.map(function (a) {
                      return a.enrollments[a.colorGrouping.index];
                    })
                  )
                  .values()
                  .map(function (a) {
                    return "null" == a
                      ? { label: "Non-" + p.colorGrouping.label }
                      : { label: a };
                  }),
              },
            }),
          (d = c - i.top - i.bottom),
          "right" == l || "left" == l
            ? j.orientation("vertical").data(a).height(d).update()
            : j.orientation("horizontal").data(a).width(e).update();
        var b;
        (b =
          "right" == l
            ? "translate(" +
              (i.left + e - j.computedWidth()) +
              "," +
              ((d - j.computedHeight()) / 2 + i.top) +
              ")"
            : "left" == l
            ? "translate(" +
              i.left +
              "," +
              ((d - j.computedHeight()) / 2 + i.top) +
              ")"
            : "top" == l
            ? "translate(" +
              (i.left + (e - j.computedWidth()) / 2) +
              "," +
              i.top +
              ")"
            : "translate(" +
              (i.left + (e - j.computedWidth()) / 2) +
              "," +
              (d + i.top - j.computedHeight()) +
              ")"),
          g.legend.transition().duration(h).attr("transform", b);
      },
      L = function () {
        (B.sortByChange.enabled || B.colorByChange.enabled) &&
          g.changeAxis.transition().duration(h).style("opacity", 1),
          (B.sortByChange.enabled || !B.colorByChange.enabled) &&
            g.changeAxis.legend.transition().duration(h).style("opacity", 0),
          B.sortByChange.enabled
            ? g.group.groups.transition().duration(h).style("opacity", 0)
            : g.group.groups.transition().duration(h).style("opacity", 1),
          B.colorByChange.enabled
            ? g.buttonsWrapper.buttons.button.color.style("display", "none")
            : g.buttonsWrapper.buttons.button.color.style("display", "block"),
          (x = 0),
          B.sortByChange.enabled
            ? (v.domain(Object.keys(p.grouping.groups)).rangeBands([0, d - 60]),
              g.groupsAxis.call(A),
              g.groupsAxis.selectAll(".tick text").each(function () {
                x < this.getComputedTextLength() &&
                  (x = this.getComputedTextLength());
              }),
              A.tickSize(-e + i.left + x),
              g.groupsAxis
                .transition()
                .duration(h)
                .call(A)
                .style("opacity", 1)
                .attr(
                  "transform",
                  "translate(" + (i.left + x - 20) + "," + (i.top + 60) + ")"
                ),
              u.range([0, e - 80 - x]),
              z.tickSize(-d + 30).scale(u),
              g.changeAxis
                .transition()
                .duration(h)
                .style("opacity", 1)
                .attr(
                  "transform",
                  "translate(" +
                    (i.left + 30 + x) +
                    "," +
                    (20 + i.top + k.computedHeight()) +
                    ")"
                ),
              g.changeAxis.axis.transition().duration(h).call(z))
            : B.colorByChange.enabled
            ? (g.groupsAxis.transition().duration(h).style("opacity", 0),
              g.changeAxis.legend
                .transition()
                .delay(h / 4)
                .duration(h)
                .style("opacity", 1),
              z.tickSize(15).scale(t),
              g.changeAxis
                .transition()
                .duration(h)
                .style("opacity", 1)
                .attr(
                  "transform",
                  "translate(" +
                    (a - q - 20) +
                    "," +
                    (20 + i.top + k.computedHeight()) +
                    ")"
                ),
              g.changeAxis.axis.transition().duration(h).call(z))
            : (g.changeAxis.transition().duration(h).style("opacity", 0),
              g.groupsAxis.transition().duration(h).style("opacity", 0));
      },
      M = function (a) {
        var b = "";
        isNaN(a.change) ||
          (a.change >= 0
            ? (b = "(+" + y(a.change) + ")")
            : a.change < 0 && (b = "(" + y(a.change) + ")")),
          AD.UTILS.createGeneralTooltip(
            d3.select(this),
            "<b>" + a.label + "</b>",
            o(a.value) + " " + b
          );
      },
      N = function () {
        AD.UTILS.removeTooltip();
      },
      O = function (a, b, c) {
        var d = 0,
          e = !1,
          f = !1,
          g = {
            next: function () {
              return e && f && c
                ? c()
                : void (a > d ? (d++, b(g)) : ((e = !0), c && c()));
            },
            iteration: function () {
              return d - 1;
            },
            break: function (a) {
              (e = !0), (f = a);
            },
          };
        return g.next(), g;
      },
      P = function () {
        g.group.bubbles.bubble = g.group.bubbles.selectAll("g.ad-bubble").data(
          p.grouping.nodes.sort(function (a, b) {
            return d3.ascending(b.value, a.value);
          }),
          function (a) {
            return "unique" == a.key
              ? Math.floor(65536 * (1 + Math.random()))
              : a.key && "auto" != a.key
              ? a.key
              : a.label;
          }
        );
        var a = g.group.bubbles.bubble
          .enter()
          .append("g")
          .attr("class", "ad-bubble")
          .on("mouseover", M)
          .on("mouseout", N);
        a
          .append("circle")
          .style("fill", function (a) {
            return m(a.enrollments[a.colorGrouping.index]);
          })
          .style("stroke", function (a) {
            return m(a.enrollments[a.colorGrouping.index]);
          })
          .attr("r", 0),
          (g.group.bubbles.bubble.circle = g.group.bubbles.bubble.select(
            "circle"
          ));
        var b = g.group.bubbles.bubble.circle
          .transition()
          .duration(h)
          .attr("r", function (a) {
            return H(a.value);
          });
        if (
          (p.groups.forEach(function (a) {
            a.nodeElements = g.group.bubbles.bubble.filter(function (b) {
              return b.group == a && b.enrollments[p.grouping.index];
            });
          }),
          B.colorByChange.enabled
            ? b
                .style("fill", function (a) {
                  return s(a.change);
                })
                .style("stroke", function (a) {
                  return d3.rgb(s(a.change)).darker(1);
                })
            : b
                .style("fill", function (a) {
                  return m(
                    a.enrollments[a.colorGrouping.index]
                      ? a.enrollments[a.colorGrouping.index]
                      : "Non-" + p.colorGrouping.label
                  );
                })
                .style("stroke", function (a) {
                  return a.enrollments[a.colorGrouping.index]
                    ? d3.rgb(m(a.enrollments[a.colorGrouping.index])).darker(1)
                    : d3.rgb(m("Non-" + p.colorGrouping.label)).darker(1);
                }),
          B.sortByChange.enabled)
        ) {
          var c = u.range();
          g.group.bubbles.bubble
            .transition()
            .duration(1.5 * h)
            .each(function (a) {
              (a.x =
                20 + Math.min(c[1], Math.max(c[0], u(a.change))) + (x + 40)),
                (a.y =
                  v(a.enrollments[a.grouping.index]) +
                  v.rangeBand() / 2 +
                  27.5 +
                  75);
            })
            .attr("transform", function (a) {
              return "translate(" + a.x + "," + a.y + ")";
            });
        } else
          p.groups.forEach(function (a) {
            a.force.size([e, d]).start(),
              O(
                300,
                function (b) {
                  a.force.alpha() < 0.025 && b["break"](!0);
                  b.iteration();
                  a.force.tick(), b.next();
                },
                function () {
                  a.force.stop(),
                    a.nodeElements
                      .transition()
                      .duration(1.5 * h)
                      .attr("transform", function (a) {
                        return "translate(" + a.x + "," + a.y + ")";
                      });
                }
              );
          });
        a.size() &&
          g.group.bubbles.bubble.size() > a.size() &&
          g.group.bubbles.bubble.each(function () {
            g.group.bubbles.node().appendChild(this);
          }),
          g.group.bubbles.bubble
            .exit()
            .transition()
            .duration(h)
            .style("opacity", 0)
            .attr("transform", function () {
              return "translate(0,0)";
            })
            .remove()
            .select("circle")
            .attr("r", 0);
      },
      Q = function () {
        p.groups = [];
        for (key in p.grouping.groups) p.groups.push(p.grouping.groups[key]);
        var a = e / d,
          b = Math.min(
            p.groups.length,
            Math.max(1, Math.round(Math.sqrt(p.groups.length) * a))
          ),
          c = Math.ceil(p.groups.length / b);
        (g.group.groups.group = g.group.groups.selectAll("g").data(p.groups)),
          w.x.domain(d3.range(0, b)).rangeBands([0, e]),
          w.y.domain(d3.range(0, c)).rangeBands([0, d - 100]);
        var f = g.group.groups.group.enter().append("g").style("opacity", 0);
        f.append("text").attr("class", "ad-group-title"),
          f.append("text").attr("class", "ad-group-total"),
          g.group.groups.group
            .each(function (a, c) {
              (a.total = d3.sum(
                a.nodes.map(function (a) {
                  return a.value;
                })
              )),
                (a.focus = {
                  x: w.x(c % b) + w.x.rangeBand() / 2,
                  y: w.y(Math.floor(c / b)) + 100 + w.y.rangeBand() / 2,
                }),
                a.force ||
                  (a.force = d3.layout
                    .force()
                    .links([])
                    .gravity(0)
                    .friction(0.9)
                    .charge(function (a) {
                      return -Math.pow(H(a.value), 2) / 9;
                    })
                    .nodes(a.nodes)
                    .on("tick", D.bind(a))),
                a.force.stop();
            })
            .transition()
            .duration(h)
            .attr("transform", function (a, c) {
              return (
                "translate(" +
                (w.x(c % b) + w.x.rangeBand() / 2) +
                "," +
                (w.y(Math.floor(c / b)) + 100) +
                ")"
              );
            })
            .style("opacity", 1),
          g.group.groups.selectAll(".focus").remove();
        var i = Math.min(
          30,
          Math.max(8, w.fontSize((e + d) / p.groups.length))
        );
        (g.group.groups.group.total = g.group.groups.group
          .select("text.ad-group-total")
          .text(function (a) {
            return o(a.total);
          })
          .style("font-size", i + "px")),
          g.group.groups.group.each(function () {}),
          (g.group.groups.group.title = g.group.groups.group
            .select("text.ad-group-title")
            .text(function (a) {
              return a.label;
            })
            .attr("dy", 0)
            .attr("y", i)
            .style("font-size", i + "px")
            .call(AD.UTILS.textWrap, w.x.rangeBand() - 10)),
          g.group.groups.group
            .exit()
            .transition()
            .duration(h)
            .style("opacity", 0)
            .remove();
      },
      R = {};
    return (
      (R.select = function (a) {
        return (g = d3.select(a)), (f = !0), R;
      }),
      (R.selection = function (a) {
        return arguments.length ? ((g = a), (f = !0), R) : g;
      }),
      (R.width = function (b) {
        return arguments.length ? ((a = b), R) : a;
      }),
      (R.height = function (a) {
        return arguments.length ? ((b = a), (c = b - 55), R) : b;
      }),
      (R.animationDuration = function (a) {
        return arguments.length ? ((h = a), j.animationDuration(h), R) : h;
      }),
      (R.xFormat = function (a) {
        return arguments.length ? ((o = AD.UTILS.numberFormat(a)), R) : o;
      }),
      (R.legendOrientation = function (a) {
        return arguments.length ? ((l = a), R) : l;
      }),
      (R.controls = function (a) {
        return arguments.length
          ? (a.hideLegend &&
              ((B.hideLegend.visible =
                null != a.hideLegend.visible
                  ? a.hideLegend.visible
                  : B.hideLegend.visible),
              (B.hideLegend.enabled =
                null != a.hideLegend.enabled
                  ? a.hideLegend.enabled
                  : B.hideLegend.enabled)),
            a.sortByChange &&
              ((B.sortByChange.visible =
                null != a.sortByChange.visible
                  ? a.sortByChange.visible
                  : B.sortByChange.visible),
              (B.sortByChange.enabled =
                null != a.sortByChange.enabled
                  ? a.sortByChange.enabled
                  : B.sortByChange.enabled)),
            a.colorByChange &&
              ((B.colorByChange.visible =
                null != a.colorByChange.visible
                  ? a.colorByChange.visible
                  : B.colorByChange.visible),
              (B.colorByChange.enabled =
                null != a.colorByChange.enabled
                  ? a.colorByChange.enabled
                  : B.colorByChange.enabled)),
            R)
          : B;
      }),
      (R.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? C[a[0]][a[1]]
                : C[a[0]]["default"]
              : (a[1] ? (C[a[0]][a[1]] = b) : (C[a[0]]["default"] = b), R)
            : C
        );
      }),
      (R.data = function (a, b) {
        if (!arguments.length) return n;
        b && ((n = {}), (f = !0)),
          (n = a.data),
          (n.nodes = n.nodes.filter(function (a) {
            return a.value > 0;
          })),
          n.groupings.forEach(function (a, b) {
            (a.index = b),
              (a.nodes = n.nodes.filter(function (a) {
                return a.enrollments[b];
              })),
              (a.groups = {}),
              (a.total = 0),
              a.nodes.forEach(function (c) {
                (a.total += c.value),
                  a.groups[c.enrollments[b]] ||
                    (a.groups[c.enrollments[b]] = {
                      nodes: [],
                      label: c.enrollments[b],
                    }),
                  a.groups[c.enrollments[b]].nodes.push(c);
              });
          });
        var c = p.grouping;
        return (
          (p.grouping = n.groupings[0]),
          c &&
            n.groupings.forEach(function (a) {
              c.label == a.label && (p.grouping = a);
            }),
          E(p.grouping),
          F(),
          (c = p.colorGrouping),
          (p.colorGrouping = n.groupings.filter(function (a) {
            return a.default_color_grouping;
          })[0]),
          c
            ? n.groupings.forEach(function (a) {
                c.label == a.label &&
                  a.default_color_grouping &&
                  (p.default_color_grouping = a);
              })
            : p.colorGrouping || (p.colorGrouping = n.groupings[0]),
          E(p.colorGrouping, "colorGrouping"),
          R
        );
      }),
      (R.generate = function (a) {
        (f = !1),
          g.selectAll("*").remove(),
          (g.buttonsWrapper = g
            .append("div")
            .attr("class", "ad-bubble-chart-buttons-wrapper")),
          (g.buttonsWrapper.buttons = g.buttonsWrapper
            .append("ul")
            .attr("class", "ad-buttons")),
          (g.svg = g
            .append("svg")
            .attr("class", "ad-bubble-chart ad-svg ad-container")),
          (g.group = g.svg.append("g")),
          (g.group.bubbles = g.group.append("g").attr("class", "ad-bubbles")),
          (g.changeAxis = g.group
            .append("g")
            .attr("class", "ad-change-axis-legend")),
          (g.changeAxis.legend = g.changeAxis.append("g")),
          (g.changeAxis.axis = g.changeAxis.append("g")),
          (g.group.groups = g.group.append("g").attr("class", "ad-groups")),
          (g.groupsAxis = g.group.append("g").attr("class", "ad-groups-axis")),
          (g.changeAxis.legend.rect = g.changeAxis.legend
            .selectAll("rect")
            .data([-0.25, -0.05, 0, 0.05, 0.25, 1])),
          g.changeAxis.legend.rect
            .enter()
            .append("rect")
            .style("fill", function (a) {
              return s(a - 0.01);
            })
            .attr("x", function (a) {
              return t(a) - t.rangeBand() / 2;
            })
            .attr("width", t.rangeBand())
            .attr("height", 10)
            .attr("y", -15),
          (g.legend = g.group.append("g").attr("class", "ad-legend")),
          (g.controls = g.group.append("g").attr("class", "ad-controls")),
          k.selection(g.controls).on("elementChange", function (a) {
            (B[a.key].enabled = a.state),
              ("sort" == a.key || "hideLegend" == a.key) && (newData = !0),
              R.update();
          }),
          j.color(m).selection(g.legend);
        var b = h;
        return R.animationDuration(0).update(a).animationDuration(b), R;
      }),
      (R.update = function (b) {
        return f
          ? R.generate(b)
          : (g.svg.attr("width", a).attr("height", c),
            I(),
            (i = AD.CONSTANTS.DEFAULTFORCEDMARGIN()),
            (e = a - i.right - i.left),
            J(),
            (i.top += k.computedHeight() + 10),
            K(),
            (i[l] +=
              "right" == l || "left" == l
                ? j.computedWidth()
                : j.computedHeight()),
            (d = c - i.top - i.bottom),
            (e = a - i.left - i.right),
            Q(),
            L(),
            G(p.grouping),
            P(),
            d3.timer.flush(),
            b && b(),
            R);
      }),
      R
    );
  }),
  (AD.CHARTS.axisChart = function () {
    var a,
      b = AD.CONSTANTS.DEFAULTWIDTH(),
      c = AD.CONSTANTS.DEFAULTHEIGHT(),
      d = AD.CONSTANTS.DEFAULTMARGIN(),
      e = c,
      f = b,
      g = { type: "linear", scale: d3.scale.linear(), domain: "auto" },
      h = { type: "linear", scale: d3.scale.linear(), domain: "auto" },
      i = !0,
      j = d3.select("body"),
      k = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      l = AD.CONSTANTS.DEFAULTFORCEDMARGIN(),
      m = new AD.UTILS.LEGENDS.legend(),
      n = new AD.UTILS.CONTROLS.horizontalControls(),
      o = "bottom",
      p = function (a) {
        return a;
      },
      q = function (a) {
        return a;
      },
      r = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
      },
      s = {
        yAxisLock: {
          label: "Lock Y-Axis",
          type: "checkbox",
          visible: !1,
          enabled: !1,
          maxStacked: AD.CONSTANTS.DEFAULTHEIGHT(),
          maxNonStacked: AD.CONSTANTS.DEFAULTHEIGHT(),
        },
        stacking: {
          label: "Stack Bars",
          type: "checkbox",
          visible: !1,
          enabled: !1,
        },
        hideLegend: {
          label: "Hide Legend",
          type: "checkbox",
          visible: !1,
          enabled: !1,
        },
      },
      t = AD.CONSTANTS.DEFAULTCOLOR(),
      u = { columns: {}, labels: { x: "", y: "" } },
      v = function (a) {
        var b = a.svg;
        b
          .transition()
          .duration(k)
          .style("opacity", 0)
          .each("end", function () {
            b.remove();
          }),
          (a.svg = j.group.columns[a.newType.split(",")[0] + "_columns"].append(
            "g"
          )),
          y[a.newType](a, "true");
      },
      w = function (a) {
        var b = a.svg;
        b.transition()
          .duration(k)
          .style("opacity", 0)
          .each("end", function () {
            b.remove();
          });
      },
      x = ["area", "bar", "line", "scatter"],
      y = {};
    (y.area = function (a) {
      var b = a.svg.selectAll("path").data([a]);
      b
        .enter()
        .append("path")
        .style("opacity", 0)
        .datum(a.modifiedData.values)
        .attr("d", a.area)
        .style("stroke", t(a.data.label))
        .style("fill", t(a.data.label)),
        b
          .datum(a.modifiedData.values)
          .transition()
          .duration(k)
          .attr("d", a.area)
          .style("opacity", 1);
    }),
      (y.bar = function (a) {
        var b = a.svg.selectAll("rect").data(a.data.values, function (a) {
          return a.x;
        });
        b
          .enter()
          .append("rect")
          .attr("class", "ad-bar-rect")
          .style("opacity", 0)
          .attr("height", 0)
          .attr("y", e),
          b
            .style("fill", t(a.data.label))
            .style("stroke-width", "0.6px")
            .style("opacity", 1),
          b
            .transition()
            .duration(k)
            .attr("x", function (a) {
              return a.xPos;
            })
            .attr("y", function (a) {
              return a.yPos;
            })
            .attr("width", function (a) {
              return a.width;
            })
            .attr("height", function (a) {
              return a.height;
            })
            .style("stroke", t(a.data.label)),
          b
            .exit()
            .transition()
            .duration(k)
            .style("opacity", 0)
            .attr("height", 0)
            .attr("y", e)
            .remove();
      }),
      (y.line = function (a) {
        var b = d3.svg
            .line()
            .x(function (a) {
              return g.scale(a.x) + B();
            })
            .y(function (a) {
              return h.scale(a.y);
            }),
          c = a.data.type.split(",")[1];
        c && b.interpolate(c);
        var d = a.svg.selectAll("path").data([a]);
        d
          .enter()
          .append("path")
          .attr("class", "ad-line")
          .style("opacity", 0)
          .datum(a.data.values)
          .attr("d", b)
          .style("stroke", t(a.data.label)),
          d
            .datum(a.data.values)
            .transition()
            .duration(k)
            .attr("d", b)
            .style("opacity", 1);
      }),
      (y.scatter = function (a) {
        {
          var b = a.svg
              .selectAll("g.ad-scatter-point")
              .data(a.data.values, function (a) {
                return a.x;
              }),
            c = b
              .enter()
              .append("g")
              .attr("class", "ad-scatter-point")
              .attr("transform", function (a) {
                return (
                  "translate(" + (g.scale(a.x) + B()) + "," + h.scale(a.y) + ")"
                );
              });
          c.append("circle")
            .attr("class", "ad-scatter-point")
            .attr("r", 5)
            .style("fill", t(a.data.label))
            .on("mouseover", function () {
              d3.select(this).transition().duration(250).attr("r", 7);
            })
            .on("mouseout", function () {
              d3.select(this).transition().duration(250).attr("r", 5);
            });
        }
        b
          .transition()
          .duration(k)
          .attr("transform", function (a) {
            return (
              "translate(" + (g.scale(a.x) + B()) + "," + h.scale(a.y) + ")"
            );
          }),
          b.exit().transition().duration(k).style("opacity", 0).remove();
      });
    var z = {},
      A = {};
    (z.bar = function () {}),
      (z.scatter = function (a) {
        a.data.svg
          .selectAll("circle")
          .transition()
          .duration(k / 2)
          .attr("r", 7);
      }),
      (z.area = function () {}),
      (z.line = function () {}),
      (A.bar = function () {}),
      (A.scatter = function (a) {
        a.data.svg
          .selectAll("circle")
          .transition()
          .duration(k / 2)
          .attr("r", 5);
      }),
      (A.area = function () {}),
      (A.line = function () {});
    var B = function () {
        return "ordinal" == g.type ? g.scale.rangeBand() / 2 : 0;
      },
      C = function (a) {
        var b,
          c,
          d = f / (7 * a.length),
          i = {};
        s.stacking.enabled
          ? ("ordinal" == g.type
              ? ((b = g.scale.rangeBand()), (c = 0.6 * b))
              : ((b = 2.5 * -d), (c = d)),
            a.forEach(function (a) {
              a.data.values.forEach(function (a) {
                (a.height = e - h.scale(a.y)),
                  (i[a.x] = i[a.x] || e),
                  (i[a.x] -= a.height),
                  (a.xPos = g.scale(a.x) + 0.2 * b),
                  (a.yPos = i[a.x]),
                  (a.width = c);
              });
            }))
          : ((b =
              "ordinal" == g.type
                ? d3.scale
                    .ordinal()
                    .domain(
                      a.map(function (a) {
                        return a.data.label;
                      })
                    )
                    .rangeRoundBands([0, g.scale.rangeBand()], 0.05, 0.3)
                : d3.scale
                    .ordinal()
                    .domain(
                      a.map(function (a) {
                        return a.data.label;
                      })
                    )
                    .rangeRoundBands([-d / 2, d / 2], 0.05, 0.3)),
            (c = b.rangeBand()),
            a.forEach(function (a) {
              a.data.values.forEach(function (d) {
                (d.xPos = g.scale(d.x) + b(a.data.label)),
                  (d.height = e - h.scale(d.y)),
                  (d.yPos = e - d.height),
                  (d.width = c);
              });
            }));
      },
      D = function (a) {
        a.forEach(function (a) {
          (a.area = d3.svg
            .area()
            .x(function (a) {
              return g.scale(a.x) + B();
            })
            .y0(e)
            .y1(function (a) {
              return h.scale(a.y);
            })),
            (interpolationType = a.data.type.split(",")[1]),
            interpolationType && a.area.interpolate(interpolationType),
            (a.modifiedData = a.data);
        });
      },
      E = {};
    return (
      (E.select = function (a) {
        return (j = d3.select(a)), (i = !0), E;
      }),
      (E.selection = function (a) {
        return arguments.length ? ((j = a), (i = !0), E) : j;
      }),
      (E.xScale = function (a) {
        return arguments.length
          ? ((g.type = a.type),
            (g.domain = a.domain),
            (i = !0),
            "linear" == a.type
              ? (g.scale = d3.scale.linear())
              : "ordinal" == a.type && (g.scale = d3.scale.ordinal()),
            a.domain ? g.scale.domain(a.domain) : (g.domain = "auto"),
            E)
          : g;
      }),
      (E.yScale = function (a) {
        return arguments.length
          ? ((h.type = a.type),
            (h.domain = a.domain),
            (i = !0),
            "linear" == a.type
              ? (h.scale = d3.scale.linear())
              : "ordinal" == a.type && (h.scale = d3.scale.ordinal()),
            a.domain ? h.scale.domain(a.domain) : (h.domain = "auto"),
            E)
          : h;
      }),
      (E.width = function (a) {
        return arguments.length ? ((b = a), E) : b;
      }),
      (E.height = function (a) {
        return arguments.length ? ((c = a), E) : c;
      }),
      (E.margin = function (a) {
        return arguments.length
          ? (a.left && (d.left = a.left),
            a.right && (d.right = a.right),
            a.top && (d.top = a.top),
            a.bottom && (d.bottom = a.bottom),
            E)
          : d;
      }),
      (E.controls = function (a) {
        return arguments.length
          ? (a.yAxisLock &&
              ((s.yAxisLock.visible =
                null != a.yAxisLock.visible
                  ? a.yAxisLock.visible
                  : s.yAxisLock.visible),
              (s.yAxisLock.enabled =
                null != a.yAxisLock.enabled
                  ? a.yAxisLock.enabled
                  : s.yAxisLock.enabled),
              (s.yAxisLock.maxStacked =
                null != a.yAxisLock.maxStacked
                  ? a.yAxisLock.maxStacked
                  : s.yAxisLock.maxStacked),
              (s.yAxisLock.maxNonStacked =
                null != a.yAxisLock.maxNonStacked
                  ? a.yAxisLock.maxNonStacked
                  : s.yAxisLock.maxNonStacked)),
            a.stacking &&
              ((s.stacking.visible =
                null != a.stacking.visible
                  ? a.stacking.visible
                  : s.stacking.visible),
              (s.stacking.enabled =
                null != a.stacking.enabled
                  ? a.stacking.enabled
                  : s.stacking.enabled)),
            a.hideLegend &&
              ((s.hideLegend.visible =
                null != a.hideLegend.visible
                  ? a.hideLegend.visible
                  : s.hideLegend.visible),
              (s.hideLegend.enabled =
                null != a.hideLegend.enabled
                  ? a.hideLegend.enabled
                  : s.hideLegend.enabled)),
            E)
          : s;
      }),
      (E.animationDuration = function (a) {
        return arguments.length
          ? ((k = a), m.animationDuration(k), n.animationDuration(k), E)
          : k;
      }),
      (E.xFormat = function (a) {
        return arguments.length ? ((p = AD.UTILS.numberFormat(a)), E) : p;
      }),
      (E.yFormat = function (a) {
        return arguments.length ? ((q = AD.UTILS.numberFormat(a)), E) : q;
      }),
      (E.legendOrientation = function (a) {
        return arguments.length ? ((o = a), E) : o;
      }),
      (E.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? r[a[0]][a[1]]
                : r[a[0]]["default"]
              : (a[1] ? (r[a[0]][a[1]] = b) : (r[a[0]]["default"] = b), E)
            : r
        );
      }),
      (E.data = function (a, b) {
        return arguments.length
          ? (b && ((u = { columns: {}, labels: { x: "", y: "" } }), (i = !0)),
            a.data.columns.forEach(function (a) {
              var b;
              u.columns[a.label]
                ? ((b = u.columns[a.label]),
                  (b.data.values = a.values || b.data.values),
                  (b.data.type = a.type || b.data.type),
                  (b.replace = a.replace || !1),
                  (b.newType = a.type ? a.type.split(",")[0] : b.oldType))
                : ((b = u.columns[a.label] = {
                    data: a,
                    newType: a.type.split(",")[0],
                    oldType: null,
                  }),
                  i ||
                    (b.svg = j.group.columns[
                      a.type.split(",")[0] + "_columns"
                    ].append("g")));
            }),
            a.data.labels && (u.labels = a.data.labels),
            E)
          : u;
      }),
      (E.generate = function (a) {
        (i = !1),
          j.selectAll("*").remove(),
          (j.svg = j
            .append("svg")
            .attr("class", "ad-axis-chart ad-svg ad-container")),
          (j.group = j.svg.append("g")),
          (j.group.axes = j.group.append("g").attr("class", "ad-axes")),
          (j.group.axes.x = j.group.axes
            .append("g")
            .attr("class", "ad-x ad-axis")),
          (j.group.axes.y = j.group.axes
            .append("g")
            .attr("class", "ad-y ad-axis")),
          (j.group.axes.xLabel = j.group.axes
            .append("g")
            .attr("class", "ad-x-label")
            .append("text")),
          (j.group.axes.yLabel = j.group.axes
            .append("g")
            .attr("class", "ad-y-label")
            .append("text")),
          (j.group.columns = j.group.append("g").attr("class", "ad-columns")),
          x.forEach(function (a) {
            j.group.columns[a + "_columns"] = j.group.columns
              .append("g")
              .attr("class", "ad-" + a + "-columns");
          });
        for (key in u.columns)
          u.columns[key].svg = j.group.columns[
            u.columns[key].newType + "_columns"
          ].append("g");
        (j.controls = j.group.append("g").attr("class", "ad-controls")),
          n.selection(j.controls).on("elementChange", function (a) {
            (s[a.key].enabled = a.state), E.update();
          }),
          (j.legend = j.group.append("g").attr("class", "ad-legend")),
          m
            .color(t)
            .selection(j.legend)
            .on("elementMouseover", function (a) {
              z[a.data.newType] &&
                (z[a.data.newType](a),
                a.data.svg.classed("ad-legend-mouseover", !0));
            })
            .on("elementMouseout", function (a) {
              z[a.data.newType] &&
                (A[a.data.newType](a),
                a.data.svg.classed("ad-legend-mouseover", !1));
            });
        var b = k;
        return E.animationDuration(0), E.update(a), E.animationDuration(b), E;
      }),
      (E.update = function (r) {
        if (i) return E.generate(r);
        (l = AD.CONSTANTS.DEFAULTFORCEDMARGIN()),
          (l.bottom += 20),
          (l.left += 20);
        var t = AD.UTILS.getValues(u.columns),
          x = t.filter(function (a) {
            return "bar" == a.newType;
          }),
          z = t.filter(function (a) {
            return "area" == a.newType;
          });
        if (
          ((f = b - d.left - d.right - l.right - l.left), s.hideLegend.enabled)
        )
          var A = { data: { items: [] } };
        else
          var A = {
            data: {
              items: t
                .filter(function (a) {
                  return "none" != a.newType;
                })
                .map(function (a) {
                  return { label: a.data.label, type: a.newType, data: a };
                })
                .sort(function (a, b) {
                  return a.label - b.label;
                }),
            },
          };
        m.width(f).data(A).update();
        var B = AD.UTILS.getValues(s).filter(function (a) {
          return a.visible;
        });
        B.map(function (a) {
          a.data = { state: a.enabled, label: a.label, key: a.key };
        }),
          n.width(f).data(B).update(),
          (l.top += n.computedHeight()),
          (e = c - d.top - d.bottom - l.top - l.bottom),
          j.controls
            .transition()
            .duration(k)
            .attr(
              "transform",
              "translate(" +
                (d.left + l.left + f - n.computedWidth()) +
                "," +
                (-n.computedHeight() - 10 + (d.top + l.top)) +
                ")"
            ),
          "right" == o || "left" == o
            ? m.orientation("vertical").height(e).update()
            : m.orientation("horizontal").width(f).update();
        var F;
        (F =
          "right" == o
            ? "translate(" +
              (l.left + f - m.computedWidth()) +
              "," +
              ((e - m.computedHeight()) / 2 + l.top) +
              ")"
            : "left" == o
            ? "translate(" +
              l.left +
              "," +
              ((e - m.computedHeight()) / 2 + l.top) +
              ")"
            : "top" == o
            ? "translate(" +
              (l.left + (f - m.computedWidth()) / 2) +
              "," +
              (l.top - 20) +
              ")"
            : "translate(" +
              (l.left + (f - m.computedWidth()) / 2) +
              "," +
              (25 + e + l.top - m.computedHeight()) +
              ")"),
          j.legend.transition().duration(k).attr("transform", F),
          (l[o] +=
            "right" == o || "left" == o
              ? m.computedWidth() + 30
              : m.computedHeight()),
          (e = c - d.top - d.bottom - l.top - l.bottom),
          (f = b - d.left - d.right - l.right - l.left);
        var G = [],
          H = [];
        t.forEach(function (a) {
          a.data.values &&
            a.newType &&
            a.data.values.forEach(function (a) {
              G.push(a.x), H.push(a.y);
            });
        });
        var I = {};
        s.stacking.enabled &&
          (x.forEach(function (a) {
            a.data.values.forEach(function (a) {
              I[a.x] || (I[a.x] = 0), (I[a.x] += a.y);
            });
          }),
          (H = H.concat(AD.UTILS.getValues(I)))),
          "linear" == g.type
            ? (g.scale.range([0, f]),
              "auto" == g.domain &&
                ((vals = []),
                g.scale.domain(AD.UTILS.AXISCHARTS.getDomainLinear(G))))
            : "ordinal" == g.type &&
              (g.scale.rangeRoundBands([0, f], 0.1),
              "auto" == g.domain &&
                g.scale.domain(AD.UTILS.AXISCHARTS.getDomainOrdinal(G)));
        var J = [0, 0];
        (J = s.yAxisLock.enabled
          ? s.stacking.enabled
            ? [0, s.yAxisLock.maxStacked]
            : [0, s.yAxisLock.maxNonStacked]
          : AD.UTILS.AXISCHARTS.getDomainLinear(H)),
          h.scale.range([e, 0]),
          "auto" == h.domain && h.scale.domain(J),
          j.svg.attr("width", b).attr("height", c),
          h.scale.nice(5);
        var K = d3.svg.axis().scale(g.scale).orient("bottom").tickFormat(p),
          L = d3.svg.axis().scale(h.scale).orient("left").tickFormat(q);
        j.group.axes.y.transition().duration(k).call(L);
        var M = 0;
        d3
          .select(".ad-y.ad-axis")
          .selectAll(".tick text")
          .each(function () {
            M < this.getComputedTextLength() &&
              (M = this.getComputedTextLength());
          }),
          (l.left += M),
          (f = b - d.left - d.right - l.right - l.left),
          "linear" == g.type
            ? g.scale.range([0, f])
            : "ordinal" == g.type && g.scale.rangeRoundBands([0, f], 0.1),
          K.tickSize(-e),
          L.tickSize(-f),
          j.group.transition().duration(k),
          j.group.axes.x
            .transition()
            .duration(k)
            .attr(
              "transform",
              "translate(" + (d.left + l.left) + "," + (d.top + l.top + e) + ")"
            )
            .call(K),
          j.group.axes.y
            .transition()
            .duration(k)
            .attr(
              "transform",
              "translate(" + (d.left + l.left) + "," + (d.top + l.top) + ")"
            )
            .call(L),
          (a =
            "ordinal" == g.type
              ? d3.scale
                  .ordinal()
                  .domain(
                    x.map(function (a) {
                      return a.data.label;
                    })
                  )
                  .rangeRoundBands([0, g.scale.rangeBand()])
              : f / (20 * x.length)),
          j.group.axes.xLabel
            .transition()
            .duration(k)
            .text(u.labels.x)
            .attr(
              "transform",
              "translate(" +
                (d.left + l.left + f / 2) +
                "," +
                (e + 30 + (d.top + l.top)) +
                ")"
            ),
          j.group.axes.yLabel
            .transition()
            .duration(k)
            .attr(
              "transform",
              "translate(" +
                (d.left + l.left - M - 10) +
                "," +
                (e / 2 + (d.top + l.top)) +
                "),rotate(-90)"
            )
            .text(u.labels.y),
          j.group.columns
            .transition()
            .duration(k)
            .attr(
              "transform",
              "translate(" + (d.left + l.left) + "," + (d.top + l.top) + ")"
            ),
          C(x),
          D(z),
          t.forEach(function (a) {
            a.replace
              ? v(a)
              : "none" == a.newType
              ? w(a)
              : a.oldType
              ? a.newType == a.oldType
                ? y[a.newType](a, !1)
                : v(a)
              : y[a.newType](a, !0),
              (a.oldType = a.newType);
          });
        var N = z.map(function (a) {
          return {
            column: a,
            maxY: d3.max(
              a.data.values.map(function (a) {
                return a.y;
              })
            ),
          };
        });
        return (
          N.sort(function (a, b) {
            return b.maxY - a.maxY;
          }),
          N.forEach(function (a) {
            j.group.columns.area_columns
              .node()
              .appendChild(a.column.svg.node());
          }),
          d3.timer.flush(),
          r && r(),
          E
        );
      }),
      E
    );
  }),
  (AD.CHARTS.sankeyChart = function () {
    var a,
      b = AD.CONSTANTS.DEFAULTWIDTH(),
      c = AD.CONSTANTS.DEFAULTHEIGHT(),
      d = c,
      e = b,
      f = !0,
      g = d3.select("body"),
      h = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      i = AD.CONSTANTS.DEFAULTFORCEDMARGIN(),
      j = new AD.UTILS.LEGENDS.legend(),
      k = new AD.UTILS.CONTROLS.horizontalControls(),
      l = "bottom",
      m = AD.CONSTANTS.DEFAULTCOLOR(),
      n = { nodes: [], links: [] },
      o = 30,
      p = 15,
      q = 20,
      r = 1,
      s = {
        hideLegend: {
          label: "Hide Legend",
          type: "checkbox",
          visible: !0,
          enabled: !0,
        },
      },
      t = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
      },
      u = function (a) {
        return a;
      },
      v = {};
    return (
      (v.select = function (a) {
        return (g = d3.select(a)), (f = !0), v;
      }),
      (v.selection = function (a) {
        return arguments.length ? ((g = a), (f = !0), v) : g;
      }),
      (v.width = function (a) {
        return arguments.length ? ((b = a), v) : b;
      }),
      (v.height = function (a) {
        return arguments.length ? ((c = a), v) : c;
      }),
      (v.animationDuration = function (a) {
        return arguments.length ? ((h = a), j.animationDuration(h), v) : h;
      }),
      (v.xFormat = function (a) {
        return arguments.length ? ((u = AD.UTILS.numberFormat(a)), v) : u;
      }),
      (v.legendOrientation = function (a) {
        return arguments.length ? ((l = a), v) : l;
      }),
      (v.nodePadding = function (a) {
        return arguments.length ? ((o = a), v) : o;
      }),
      (v.layout = function (a) {
        return arguments.length ? ((q = a), v) : q;
      }),
      (v.controls = function (a) {
        return arguments.length
          ? (a.hideLegend &&
              ((s.hideLegend.visible =
                null != a.hideLegend.visible
                  ? a.hideLegend.visible
                  : s.hideLegend.visible),
              (s.hideLegend.enabled =
                null != a.hideLegend.enabled
                  ? a.hideLegend.enabled
                  : s.hideLegend.enabled)),
            v)
          : s;
      }),
      (v.minLinkWidth = function (a) {
        return arguments.length ? ((r = a), v) : r;
      }),
      (v.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? t[a[0]][a[1]]
                : t[a[0]]["default"]
              : (a[1] ? (t[a[0]][a[1]] = b) : (t[a[0]]["default"] = b), v)
            : t
        );
      }),
      (v.data = function (a, b) {
        return arguments.length
          ? (b && ((n = { nodes: [], links: [] }), (f = !0)),
            a.data.nodes && (n.nodes = a.data.nodes),
            a.data.links && (n.links = a.data.links),
            a.data.labels && (n.labels = a.data.labels),
            a.data.columnHeaders && (n.columnHeaders = a.data.columnHeaders),
            v)
          : n;
      }),
      (v.generate = function (a) {
        (f = !1),
          g.selectAll("*").remove(),
          (g.svg = g
            .append("svg")
            .attr("class", "ad-sankey-chart ad-svg ad-container")),
          (g.group = g.svg.append("g")),
          (g.group.sankey = g.group.append("g").attr("class", "ad-sankey")),
          (g.group.sankey.links = g.group.sankey
            .append("g")
            .attr("class", "ad-sankey-links")),
          (g.group.sankey.nodes = g.group.sankey
            .append("g")
            .attr("class", "ad-sankey-nodes")),
          (g.group.labels = g.group
            .append("g")
            .attr("class", "ad-sankey-labels")),
          (g.group.labels.source = g.group.labels
            .append("g")
            .attr("class", "ad-sankey-label-source")),
          (g.group.labels.source.text = g.group.labels.source
            .append("text")
            .attr("y", 23)),
          (g.group.labels.destination = g.group.labels
            .append("g")
            .attr("class", "ad-sankey-label-destination")),
          (g.group.labels.destination.text = g.group.labels.destination
            .append("text")
            .attr("y", 23)),
          (g.group.columnHeaders = g.group
            .append("g")
            .attr("class", "ad-sankey-column-headers")),
          (g.controls = g.group.append("g").attr("class", "ad-controls")),
          k.selection(g.controls).on("elementChange", function (a) {
            (s[a.key].enabled = a.state),
              ("sort" == a.key || "hideLegend" == a.key) && (newData = !0),
              v.update();
          }),
          (g.legend = g.group.append("g").attr("class", "ad-legend")),
          j.color(m).selection(g.legend);
        var b = h;
        return v.animationDuration(0).update(a).animationDuration(b), v;
      }),
      (v.update = function (t) {
        if (f) return v.generate(t);
        (i = AD.CONSTANTS.DEFAULTFORCEDMARGIN()), (e = b - i.right - i.left);
        var w = AD.UTILS.getValues(s).filter(function (a) {
          return a.visible;
        });
        if (
          (w.map(function (a) {
            a.data = { state: a.enabled, label: a.label, key: a.key };
          }),
          k.data(w).width(e).update(),
          g.controls
            .transition()
            .duration(h)
            .attr(
              "transform",
              "translate(" +
                (i.left + e - k.computedWidth()) +
                "," +
                i.top +
                ")"
            ),
          (i.top += k.computedHeight()),
          (d = c - i.top - i.bottom),
          s.hideLegend.enabled)
        )
          var x = { data: { items: [] } };
        else
          var x = {
            data: {
              items: d3
                .set(
                  n.nodes.map(function (a) {
                    return a.colorKey ? a.colorKey : a.name;
                  })
                )
                .values()
                .map(function (a) {
                  return { label: a };
                }),
            },
          };
        "right" == l || "left" == l
          ? j.orientation("vertical").data(x).height(d).update()
          : j.orientation("horizontal").data(x).width(e).update();
        var y;
        (y =
          "right" == l
            ? "translate(" +
              (i.left + e - j.computedWidth()) +
              "," +
              ((d - j.computedHeight()) / 2 + i.top) +
              ")"
            : "left" == l
            ? "translate(" +
              i.left +
              "," +
              ((d - j.computedHeight()) / 2 + i.top) +
              ")"
            : "top" == l
            ? "translate(" +
              (i.left + (e - j.computedWidth()) / 2) +
              "," +
              i.top +
              ")"
            : "translate(" +
              (i.left + (e - j.computedWidth()) / 2) +
              "," +
              (d + i.top - j.computedHeight()) +
              ")"),
          g.legend.transition().duration(h).attr("transform", y),
          (i[l] +=
            "right" == l || "left" == l
              ? j.computedWidth() + 10
              : j.computedHeight()),
          (d = c - i.top - i.bottom),
          (e = b - i.left - i.right);
        var z = {
          source: g.group.labels.source.transition().duration(h),
          destination: g.group.labels.destination.transition().duration(h),
        };
        n.labels
          ? (g.group.labels
              .transition()
              .duration(h)
              .attr("transform", "translate(" + i.left + "," + i.top + ")"),
            n.labels.source
              ? (z.source.style("opacity", 1),
                g.group.labels.source.text.text(n.labels.source))
              : z.source.style("opacity", 0),
            n.labels.destination
              ? (z.destination.style("opacity", 1),
                g.group.labels.destination.text.text(n.labels.destination))
              : z.destination.style("opacity", 0),
            z.source.attr("transform", "translate(0,0)"),
            z.destination.attr("transform", "translate(" + e + ",0)"),
            (i.top += 35))
          : (z.source.style("opacity", 0), z.destination.style("opacity", 0));
        var A, B;
        n.columnHeaders &&
          n.columnHeaders.length > 0 &&
          ((B = d3.scale
            .linear()
            .domain([0, n.columnHeaders.length - 1])
            .range([0, e - p])),
          g.group.columnHeaders
            .transition()
            .duration(h)
            .attr("transform", "translate(" + i.left + "," + i.top + ")"),
          (A = g.group.columnHeaders
            .selectAll("g.ad-sankey-column-header")
            .data(n.columnHeaders)),
          A.enter()
            .append("g")
            .attr("class", "ad-sankey-column-header")
            .append("text")
            .attr("y", 16)
            .attr("x", function (a, b) {
              return 0 == b
                ? -p / 2
                : b == n.columnHeaders.length - 1
                ? p / 2
                : void 0;
            }),
          A.select("text").text(function (a) {
            return a;
          }),
          A.transition()
            .duration(h)
            .attr("transform", function (a, b) {
              return "translate(" + (B(b) + p / 2) + ",0)";
            }),
          (i.top += 25)),
          (d = c - i.top - i.bottom),
          (a = d3
            .sankey()
            .size([e, d])
            .nodeWidth(p)
            .nodePadding(o)
            .nodes(n.nodes)
            .links(n.links)
            .layout(q));
        var C = g.group.sankey.nodes
            .selectAll("g.ad-sankey-node")
            .data(n.nodes, function (a, b) {
              return "unique" == a.key
                ? Math.floor(65536 * (1 + Math.random()))
                : a.key && "auto" != a.key
                ? a.key
                : b;
            }),
          D = C.enter()
            .append("g")
            .attr("class", "ad-sankey-node")
            .on("mouseover", function (a) {
              AD.UTILS.createGeneralTooltip(
                d3.select(this),
                "<b>" + a.name + "</b>",
                u(a.value)
              );
            })
            .on("mouseout", function () {
              AD.UTILS.removeTooltip();
            })
            .attr("transform", function (a) {
              return "translate(" + a.x + "," + a.y + ")";
            })
            .on("click", (a) => {
              AD.UTILS.createGeneralTooltip(
                d3.select(this),
                "<b>" +
                  a.source.name +
                  ' <i class="fa fa-arrow-right"></i> ' +
                  a.target.name +
                  "</b>",
                u(a.value)
              );
              console.log(a);
            })
            .style("opacity", 0);
        D.append("rect"), D.append("text");
        var E = C.select("text").text(function (a) {
          return a.shortName;
        });
        C.transition()
          .duration(h)
          .attr("transform", function (a) {
            return "translate(" + a.x + "," + a.y + ")";
          })
          .style("opacity", 1),
          C.select("rect")
            .transition()
            .duration(h)
            .attr("width", a.nodeWidth())
            .attr("height", function (a) {
              return a.dy;
            }),
          E.transition()
            .duration(h)
            .style("text-anchor", function (a) {
              return a.x < e / 2 ? "start" : "end";
            })
            .attr("x", function (b) {
              return b.x < e / 2 ? a.nodeWidth() + 5 : -5;
            })
            .attr("y", function (a) {
              return a.dy / 2 + 5;
            });
        var F = g.group.sankey.links
            .selectAll("g.ad-sankey-link")
            .data(n.links, function (a, b) {
              return "unique" == a.key
                ? Math.floor(65536 * (1 + Math.random()))
                : a.key && "auto" != a.key
                ? a.key
                : b;
            }),
          G = F.enter()
            .append("g")
            .attr("class", "ad-sankey-link")
            .on("mouseover", function (a) {
              AD.UTILS.createGeneralTooltip(
                d3.select(this),
                "<b>" +
                  a.source.name +
                  ' <i class="fa fa-arrow-right"></i> ' +
                  a.target.name +
                  "</b>",
                u(a.value)
              );
            })
            .on("mouseout", function () {
              AD.UTILS.removeTooltip();
            })
            .style("opacity", 0);
        return (
          G.append("path"),
          G.append("text"),
          F.exit().transition().duration(h).style("opacity", 0).remove(),
          C.exit().transition().duration(h).style("opacity", 0).remove(),
          F.transition().duration(h).style("opacity", 1),
          F.select("path")
            .style("stroke", function (a) {
              return a.colorBy
                ? m(
                    a[a.colorBy].colorKey
                      ? a[a.colorBy].colorKey
                      : a[a.colorBy].name
                  )
                : "#777";
            })
            .transition()
            .style("stroke-width", function (a) {
              return Math.max(a.dy, r);
            })
            .duration(h)
            .attr("d", a.link()),
          g.svg.attr("width", b).attr("height", c),
          g.group.sankey
            .transition()
            .duration(h)
            .attr("transform", "translate(" + i.left + "," + i.top + ")"),
          d3.timer.flush(),
          t && t(),
          v
        );
      }),
      v
    );
  }),
  (AD.CHARTS.pieChart = function () {
    var a = AD.CONSTANTS.DEFAULTWIDTH(),
      b = AD.CONSTANTS.DEFAULTHEIGHT(),
      c = b,
      d = a,
      e = !0,
      f = !0,
      g = d3.select("body"),
      h = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      i = AD.CONSTANTS.DEFAULTFORCEDMARGIN(),
      j = new AD.UTILS.LEGENDS.legend(),
      k = new AD.UTILS.CONTROLS.horizontalControls(),
      l = AD.CONSTANTS.DEFAULTCOLOR(),
      m = {},
      n = function (a) {
        return a;
      },
      o = {},
      p = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
      },
      q = 0,
      r = Math.min(c, d) / 2,
      s = d3.svg
        .arc()
        .outerRadius(r)
        .innerRadius(r * q),
      t = d3.layout
        .pie()
        .value(function (a) {
          return a.value;
        })
        .sort(null),
      u = 1,
      v = {};
    return (
      (v.select = function (a) {
        return (g = d3.select(a)), (e = !0), v;
      }),
      (v.selection = function (a) {
        return arguments.length ? ((g = a), (e = !0), v) : g;
      }),
      (v.width = function (b) {
        return arguments.length ? ((a = b), v) : a;
      }),
      (v.height = function (a) {
        return arguments.length ? ((b = a), v) : b;
      }),
      (v.animationDuration = function (a) {
        return arguments.length ? ((h = a), j.animationDuration(h), v) : h;
      }),
      (v.xFormat = function (a) {
        return arguments.length ? ((n = AD.UTILS.numberFormat(a)), v) : n;
      }),
      (v.controls = function () {
        return arguments.length ? v : o;
      }),
      (v.donutRatio = function (a) {
        return arguments.length ? ((q = a), v) : q;
      }),
      (v.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? p[a[0]][a[1]]
                : p[a[0]]["default"]
              : (a[1] ? (p[a[0]][a[1]] = b) : (p[a[0]]["default"] = b), v)
            : p
        );
      }),
      (v.data = function (a, b) {
        return arguments.length
          ? (b && ((m = {}), (e = !0)),
            (m.values = a.data.values),
            (u = d3.sum(
              m.values.map(function (a) {
                return a.value;
              })
            )),
            (f = !0),
            v)
          : m;
      }),
      (v.generate = function (a) {
        (e = !1),
          g.selectAll("*").remove(),
          (g.svg = g
            .append("svg")
            .attr("class", "ad-pie-chart ad-svg ad-container")),
          (g.group = g.svg.append("g")),
          (g.group.pie = g.group.append("g").attr("class", "ad-pie")),
          (g.legend = g.group.append("g").attr("class", "ad-legend")),
          (g.controls = g.group.append("g").attr("class", "ad-controls")),
          k.selection(g.controls).on("elementChange", function (a) {
            (o[a.key].enabled = a.state), v.update();
          }),
          j.color(l).selection(g.legend);
        var b = h;
        return v.animationDuration(0).update(a).animationDuration(b), v;
      }),
      (v.update = function (p) {
        if (e) return v.generate(p);
        (i = AD.CONSTANTS.DEFAULTFORCEDMARGIN()), (d = a - i.right - i.left);
        var w = AD.UTILS.getValues(o).filter(function (a) {
          return a.visible;
        });
        w.map(function (a) {
          a.data = { state: a.enabled, label: a.label, key: a.key };
        }),
          k.data(w).width(d).update(),
          g.controls
            .transition()
            .duration(h)
            .attr(
              "transform",
              "translate(" +
                (d - k.computedWidth()) +
                "," +
                -k.computedHeight() +
                ")"
            ),
          (i.top += k.computedHeight()),
          (c = b - i.top - i.bottom),
          (i.bottom += j.computedHeight()),
          (c = b - i.top - i.bottom),
          (r = Math.min(c, d) / 2),
          s.outerRadius(r).innerRadius(r * q),
          g.group.pie
            .transition()
            .duration(h)
            .attr("transform", "translate(" + d / 2 + "," + c / 2 + ")");
        var x = g.group.pie
            .datum(m.values)
            .selectAll("g.ad-arc")
            .data(t, function (a) {
              return "unique" == a.data.key
                ? Math.floor(65536 * (1 + Math.random()))
                : a.data.key && "auto" != a.data.key
                ? a.data.key
                : a.data.label;
            }),
          y = x.enter().append("g").attr("class", "ad-arc").style("opacity", 0);
        x.transition().duration(h).style("opacity", 1),
          y.append("path").each(function (a) {
            (this._current = {}),
              (this._current.startAngle = 0),
              (this._current.endAngle = 0),
              (a.path = d3.select(this));
          }),
          y.append("text"),
          x
            .select("text")
            .transition()
            .duration(h)
            .text(function (a) {
              return d3.format("%")(a.data.value / u);
            })
            .attr("transform", function (a) {
              var b = s.centroid(a);
              return "translate(" + b[0] + "," + b[1] + ")";
            });
        var z = x.select("path");
        z.each(function (a) {
          a.test = "test";
        })
          .style("fill", function (a) {
            return l(a.data.colorKey ? a.data.colorKey : a.data.label);
          })
          .on("mouseover", null)
          .on("mouseout", null);
        var A = z.transition().duration(h);
        return (
          f ? ((f = !f), A.call(arcTween, s)) : A.attr("d", s),
          A.each("end", function () {
            var a = d3.select(this);
            a.on("mouseover", function (b) {
              a
                .transition()
                .duration(AD.CONSTANTS.ANIMATIONLENGTHS()["short"])
                .attr("transform", "scale(1.01)")
                .style("fill-opacity", 0.9),
                AD.UTILS.createGeneralTooltip(
                  a,
                  "<b>" + b.data.label + "</b>",
                  n(b.data.value)
                );
            }).on("mouseout", function () {
              a
                .transition()
                .duration(AD.CONSTANTS.ANIMATIONLENGTHS()["short"])
                .attr("transform", "scale(1)")
                .style("fill-opacity", ""),
                AD.UTILS.removeTooltip();
            });
          }),
          x.exit().transition().duration(h).style("opacity", 0).remove(),
          g.legend
            .transition()
            .duration(h)
            .attr(
              "transform",
              "translate(" + (d - j.computedWidth()) / 2 + "," + c + ")"
            ),
          g.svg.attr("width", a).attr("height", b),
          g.group.attr("transform", "translate(" + i.left + "," + i.top + ")"),
          d3.timer.flush(),
          p && p(),
          v
        );
      }),
      v
    );
  }),
  (AD.CHARTS.interactiveBarChart = function () {
    var a,
      b = AD.CONSTANTS.DEFAULTWIDTH(),
      c = AD.CONSTANTS.DEFAULTHEIGHT(),
      d = c,
      e = b,
      f = { horizontal: e, vertical: d },
      g = { type: "linear", scale: d3.scale.linear(), domain: "auto" },
      h = { type: "linear", scale: d3.scale.linear(), domain: "auto" },
      i = { horizontal: g, vertical: h },
      j = !0,
      k = d3.select("body"),
      l = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      m = AD.CONSTANTS.DEFAULTFORCEDMARGIN(),
      n = new AD.UTILS.LEGENDS.legend(),
      o = new AD.UTILS.CONTROLS.horizontalControls(),
      p = "bottom",
      q = function (a) {
        return a;
      },
      r = function (a) {
        return a;
      },
      s = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
      },
      t = {
        x: "x",
        y: "y",
        horizontal: "horizontal",
        vertical: "vertical",
        width: "width",
        height: "height",
        bottom: "bottom",
        left: "left",
      },
      u = {
        yAxisLock: {
          label: "Lock Y-Axis",
          type: "checkbox",
          visible: !1,
          enabled: !1,
          maxStacked: AD.CONSTANTS.DEFAULTHEIGHT(),
          maxNonStacked: AD.CONSTANTS.DEFAULTHEIGHT(),
        },
        stacking: {
          label: "Stack Bars",
          type: "checkbox",
          visible: !1,
          enabled: !1,
        },
        horizontal: {
          label: "Horizontal",
          type: "checkbox",
          visible: !1,
          enabled: !1,
        },
        hideLegend: {
          label: "Hide Legend",
          type: "checkbox",
          visible: !1,
          enabled: !1,
        },
      },
      v = AD.CONSTANTS.DEFAULTCOLOR(),
      w = { columns: {}, labels: { x: "", y: "" } },
      x = function (a) {
        var b = a.svg;
        b.transition()
          .duration(l)
          .style("opacity", 0)
          .each("end", function () {
            b.remove();
          });
      },
      y = function (a) {
        var b = a.svg.selectAll("rect").data(a.data.values, function (a) {
          return a.x;
        });
        b
          .enter()
          .append("rect")
          .attr("class", "ad-bar-rect")
          .style("opacity", 0)
          .attr(t.height, 0)
          .attr(t.y, f[t.vertical])
          .on("mouseover", function (b) {
            AD.UTILS.createGeneralTooltip(
              d3.select(this),
              "<b>" + a.key + " <i>(" + q(b.x) + ")</i></b> ",
              r(b.y)
            );
          })
          .on("mouseout", function () {
            AD.UTILS.removeTooltip();
          }),
          b.style("fill", v(a.data.label)).style("opacity", 1),
          b
            .transition()
            .duration(l)
            .attr(t.x, function (a) {
              return a.xPos;
            })
            .attr(t.y, function (a) {
              return a.yPos;
            })
            .attr(t.width, function (a) {
              return a[t.width];
            })
            .attr(t.height, function (a) {
              return a[t.height];
            }),
          b
            .exit()
            .transition()
            .duration(l)
            .style("opacity", 0)
            .attr(t.height, 0)
            .attr(t.y, f.vertical)
            .remove();
      },
      z = function (a) {
        var b,
          c,
          d = e / (2 * a.length),
          j = {};
        u.stacking.enabled
          ? ("ordinal" == g.type
              ? ((b = i[t.horizontal].scale.rangeBand()), (c = 0.6 * b))
              : ((b = 2.5 * -d), (c = d)),
            a.forEach(function (a) {
              a.data.values.forEach(function (a) {
                u.horizontal.enabled
                  ? ((a[t.height] = i[t.vertical].scale(a.y)),
                    (j[a.x] = j[a.x] || 0),
                    (a.xPos = i[t.horizontal].scale(a.x) + 0.2 * b),
                    (a.yPos = j[a.x]),
                    (j[a.x] += a[t.height]),
                    (a[t.width] = c))
                  : ((a[t.height] = f[t.vertical] - i[t.vertical].scale(a.y)),
                    (j[a.x] = j[a.x] || f[t.vertical]),
                    (j[a.x] -= a[t.height]),
                    (a.xPos = i[t.horizontal].scale(a.x) + 0.2 * b),
                    (a.yPos = j[a.x]),
                    (a[t.width] = c));
              });
            }))
          : ((b =
              "ordinal" == g.type
                ? d3.scale
                    .ordinal()
                    .domain(
                      a.map(function (a) {
                        return a.data.label;
                      })
                    )
                    .rangeRoundBands([0, g.scale.rangeBand()], 0.05, 0)
                : d3.scale
                    .ordinal()
                    .domain(
                      a.map(function (a) {
                        return a.data.label;
                      })
                    )
                    .rangeRoundBands([-d / 2, d / 2], 0.05, 0.3)),
            (c = b.rangeBand()),
            a.forEach(function (a) {
              a.data.values.forEach(function (d) {
                u.horizontal.enabled
                  ? ((d.xPos = i[t.horizontal].scale(d.x) + b(a.data.label)),
                    (d[t.height] = h.scale(d.y)),
                    (d.yPos = 0),
                    (d[t.width] = c))
                  : ((d.xPos = i[t.horizontal].scale(d.x) + b(a.data.label)),
                    (d[t.height] = f[t.vertical] - h.scale(d.y)),
                    (d.yPos = f[t.vertical] - d[t.height]),
                    (d[t.width] = c));
              });
            }));
      },
      A = {};
    return (
      (A.select = function (a) {
        return (k = d3.select(a)), (j = !0), A;
      }),
      (A.selection = function (a) {
        return arguments.length ? ((k = a), (j = !0), A) : k;
      }),
      (A.xScale = function (a) {
        return arguments.length
          ? ((g.type = a.type),
            (g.domain = a.domain),
            (j = !0),
            "linear" == a.type
              ? (g.scale = d3.scale.linear())
              : "ordinal" == a.type && (g.scale = d3.scale.ordinal()),
            a.domain || (g.domain = "auto"),
            A)
          : g;
      }),
      (A.yScale = function (a) {
        return arguments.length
          ? ((h.type = a.type),
            (h.domain = a.domain),
            (j = !0),
            "linear" == a.type
              ? (h.scale = d3.scale.linear())
              : "ordinal" == a.type && (h.scale = d3.scale.ordinal()),
            a.domain || (h.domain = "auto"),
            A)
          : h;
      }),
      (A.width = function (a) {
        return arguments.length ? ((b = a), A) : b;
      }),
      (A.height = function (a) {
        return arguments.length ? ((c = a), A) : c;
      }),
      (A.controls = function (a) {
        return arguments.length
          ? (a.yAxisLock &&
              ((u.yAxisLock.visible =
                null != a.yAxisLock.visible
                  ? a.yAxisLock.visible
                  : u.yAxisLock.visible),
              (u.yAxisLock.enabled =
                null != a.yAxisLock.enabled
                  ? a.yAxisLock.enabled
                  : u.yAxisLock.enabled),
              (u.yAxisLock.maxStacked =
                null != a.yAxisLock.maxStacked
                  ? a.yAxisLock.maxStacked
                  : u.yAxisLock.maxStacked),
              (u.yAxisLock.maxNonStacked =
                null != a.yAxisLock.maxNonStacked
                  ? a.yAxisLock.maxNonStacked
                  : u.yAxisLock.maxNonStacked)),
            a.stacking &&
              ((u.stacking.visible =
                null != a.stacking.visible
                  ? a.stacking.visible
                  : u.stacking.visible),
              (u.stacking.enabled =
                null != a.stacking.enabled
                  ? a.stacking.enabled
                  : u.stacking.enabled)),
            a.horizontal &&
              ((u.horizontal.visible =
                null != a.horizontal.visible
                  ? a.horizontal.visible
                  : u.horizontal.visible),
              (u.horizontal.enabled =
                null != a.horizontal.enabled
                  ? a.horizontal.enabled
                  : u.horizontal.enabled)),
            a.hideLegend &&
              ((u.hideLegend.visible =
                null != a.hideLegend.visible
                  ? a.hideLegend.visible
                  : u.hideLegend.visible),
              (u.hideLegend.enabled =
                null != a.hideLegend.enabled
                  ? a.hideLegend.enabled
                  : u.hideLegend.enabled)),
            A)
          : u;
      }),
      (A.animationDuration = function (a) {
        return arguments.length
          ? ((l = a), n.animationDuration(l), o.animationDuration(l), A)
          : l;
      }),
      (A.xFormat = function (a) {
        return arguments.length ? ((q = AD.UTILS.numberFormat(a)), A) : q;
      }),
      (A.yFormat = function (a) {
        return arguments.length ? ((r = AD.UTILS.numberFormat(a)), A) : r;
      }),
      (A.legendOrientation = function (a) {
        return arguments.length ? ((p = a), A) : p;
      }),
      (A.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? s[a[0]][a[1]]
                : s[a[0]]["default"]
              : (a[1] ? (s[a[0]][a[1]] = b) : (s[a[0]]["default"] = b), A)
            : s
        );
      }),
      (A.data = function (a, b) {
        return arguments.length
          ? (b && ((w = { columns: {}, labels: { x: "", y: "" } }), (j = !0)),
            a.data.columns.forEach(function (a) {
              var b;
              w.columns[a.label]
                ? ((b = w.columns[a.label]),
                  (b.data.values = a.values || b.data.values),
                  (b.type = a.type))
                : ((b = w.columns[a.label] = { data: a, type: a.type }),
                  j || (b.svg = k.group.columns.append("g"))),
                "none" == b.type && (x(b), delete w.columns[a.label]);
            }),
            a.data.labels && (w.labels = a.data.labels),
            A)
          : w;
      }),
      (A.generate = function (a) {
        (j = !1),
          k.selectAll("*").remove(),
          (k.svg = k
            .append("svg")
            .attr("class", "ad-interactive-bar-chart ad-svg ad-container")),
          (k.group = k.svg.append("g")),
          (k.group.axes = k.group.append("g").attr("class", "ad-axes")),
          (k.group.axes.x = k.group.axes
            .append("g")
            .attr("class", "ad-x ad-axis")),
          (k.group.axes.y = k.group.axes
            .append("g")
            .attr("class", "ad-y ad-axis")),
          (k.group.axes.xLabel = k.group.axes
            .append("g")
            .attr("class", "ad-x-label")
            .append("text")),
          (k.group.axes.yLabel = k.group.axes
            .append("g")
            .attr("class", "ad-y-label")
            .append("text")),
          (k.group.columns = k.group.append("g").attr("class", "ad-columns"));
        for (key in w.columns) w.columns[key].svg = k.group.columns.append("g");
        (k.controls = k.group.append("g").attr("class", "ad-controls")),
          o.selection(k.controls).on("elementChange", function (a) {
            (u[a.key].enabled = a.state), A.update();
          }),
          (k.legend = k.group.append("g").attr("class", "ad-legend")),
          n
            .color(v)
            .selection(k.legend)
            .on("elementMouseover", function (a) {
              k.group.columns
                .selectAll("rect")
                .transition()
                .duration(l / 2)
                .style("opacity", 0.35),
                a.data.svg
                  .selectAll("rect")
                  .transition()
                  .duration(0)
                  .style("opacity", 1);
            })
            .on("elementMouseout", function () {
              k.group.columns
                .selectAll("rect")
                .transition()
                .duration(l / 4)
                .style("opacity", 1);
            });
        var b = l;
        return A.animationDuration(0), A.update(a), A.animationDuration(b), A;
      }),
      (A.update = function (s) {
        if (j) return A.generate(s);
        (m = AD.CONSTANTS.DEFAULTFORCEDMARGIN()),
          (m.bottom += 20),
          (m.left += 20),
          u.horizontal.enabled
            ? ((i = { horizontal: h, vertical: g }),
              (t = {
                x: "y",
                y: "x",
                horizontal: "vertical",
                vertical: "horizontal",
                width: "height",
                height: "width",
                bottom: "left",
                left: "bottom",
              }))
            : ((i = { horizontal: g, vertical: h }),
              (t = {
                x: "x",
                y: "y",
                horizontal: "horizontal",
                vertical: "vertical",
                width: "width",
                height: "height",
                bottom: "bottom",
                left: "left",
              }));
        var v = AD.UTILS.getValues(w.columns);
        if (((e = b - m.right - m.left), u.hideLegend.enabled))
          var x = { data: { items: [] } };
        else
          var x = {
            data: {
              items: v
                .filter(function (a) {
                  return "none" != a.newType;
                })
                .map(function (a) {
                  return { label: a.data.label, type: a.newType, data: a };
                })
                .sort(function (a, b) {
                  return a.label - b.label;
                }),
            },
          };
        n.width(e).data(x).update();
        var B = AD.UTILS.getValues(u).filter(function (a) {
          return a.visible;
        });
        B.map(function (a) {
          a.data = { state: a.enabled, label: a.label, key: a.key };
        }),
          o.width(e).data(B).update(),
          (m.top += o.computedHeight()),
          (d = c - m.top - m.bottom),
          k.controls
            .transition()
            .duration(l)
            .attr(
              "transform",
              "translate(" +
                (m.left + e - o.computedWidth()) +
                "," +
                (-o.computedHeight() - 10 + m.top) +
                ")"
            ),
          "right" == p || "left" == p
            ? n.orientation("vertical").height(d).update()
            : n.orientation("horizontal").width(e).update();
        var C;
        (C =
          "right" == p
            ? "translate(" +
              (m.left + e - n.computedWidth()) +
              "," +
              ((d - n.computedHeight()) / 2 + m.top) +
              ")"
            : "left" == p
            ? "translate(" +
              m.left +
              "," +
              ((d - n.computedHeight()) / 2 + m.top) +
              ")"
            : "top" == p
            ? "translate(" +
              (m.left + (e - n.computedWidth()) / 2) +
              "," +
              (m.top - 20) +
              ")"
            : "translate(" +
              (m.left + (e - n.computedWidth()) / 2) +
              "," +
              (25 + d + m.top - n.computedHeight()) +
              ")"),
          k.legend.transition().duration(l).attr("transform", C),
          (m[p] +=
            "right" == p || "left" == p
              ? n.computedWidth() + 30
              : n.computedHeight()),
          (d = c - m.top - m.bottom),
          (e = b - m.right - m.left),
          (f = { horizontal: e, vertical: d });
        var D = [],
          E = [],
          F = {};
        u.stacking.enabled
          ? (v.forEach(function (a) {
              a.data.values.forEach(function (a) {
                F[a.x] || (F[a.x] = 0),
                  (F[a.x] += a.y),
                  D.push(a.x),
                  E.push(a.y);
              });
            }),
            (E = E.concat(AD.UTILS.getValues(F))))
          : v.forEach(function (a) {
              a.data.values &&
                a.data.values.forEach(function (a) {
                  D.push(a.x), E.push(a.y);
                });
            });
        var G = {};
        "ordinal" == i[t.horizontal].type
          ? (i[t.horizontal].scale.rangeRoundBands([0, f[t.horizontal]], 0.1),
            (G[t.horizontal] = AD.UTILS.AXISCHARTS.getDomainOrdinal(D).sort()))
          : (i[t.horizontal].scale.range([0, f[t.horizontal]]),
            (G[t.horizontal] = AD.UTILS.AXISCHARTS.getDomainLinear(D))),
          (G[t.vertical] = u.yAxisLock.enabled
            ? u.stacking.enabled
              ? [0, u.yAxisLock.maxStacked]
              : [0, u.yAxisLock.maxNonStacked]
            : AD.UTILS.AXISCHARTS.getDomainLinear(E)),
          i[t.vertical].scale.range([f[t.vertical], 0]),
          i[t.horizontal].scale.domain(
            "auto" == i[t.horizontal].domain
              ? G[t.horizontal]
              : i[t.horizontal].domain
          ),
          i[t.vertical].scale.domain(
            "auto" == i[t.vertical].domain
              ? G[t.vertical]
              : i[t.vertical].domain
          ),
          u.horizontal.enabled &&
            i[t.vertical].scale.domain(i[t.vertical].scale.domain().reverse()),
          k.svg.attr("width", b).attr("height", c),
          i[t.vertical].scale.nice(5);
        var H = {
          x: d3.svg
            .axis()
            .scale(i[t.horizontal].scale)
            .orient(t.bottom)
            .tickFormat(q),
          y: d3.svg
            .axis()
            .scale(i[t.vertical].scale)
            .orient(t.left)
            .tickFormat(r),
        };
        k.group.axes[t.y].transition().duration(l).call(H[t.y]);
        var I = 0;
        return (
          k.group.axes[t.y].selectAll(".tick text").each(function () {
            I < this.getComputedTextLength() &&
              (I = this.getComputedTextLength());
          }),
          (m.left += I),
          (e = b - m.right - m.left),
          (f.horizontal = e),
          u.horizontal.enabled
            ? "linear" == i.horizontal.type
              ? i.horizontal.scale.range([f.horizontal, 0])
              : "ordinal" == i.horizontal.type &&
                i.horizontal.scale.rangeRoundBands([f.horizontal, 0], 0.1)
            : "linear" == i.horizontal.type
            ? i.horizontal.scale.range([0, f.horizontal])
            : "ordinal" == i.horizontal.type &&
              i.horizontal.scale.rangeRoundBands([0, f.horizontal], 0.1),
          H.x.tickSize(-f[t.vertical]),
          H.y.tickSize(-f[t.horizontal]),
          k.group.axes[t.x]
            .transition()
            .duration(l)
            .attr("transform", "translate(" + m.left + "," + (m.top + d) + ")")
            .call(H[t.x]),
          k.group.axes[t.y]
            .transition()
            .duration(l)
            .attr("transform", "translate(" + m.left + "," + m.top + ")")
            .call(H[t.y]),
          (a =
            "ordinal" == i[t.horizontal].type
              ? d3.scale
                  .ordinal()
                  .domain(
                    v.map(function (a) {
                      return a.data.label;
                    })
                  )
                  .rangeRoundBands([0, i[t.horizontal].scale.rangeBand()])
              : f[t.horizontal] / (20 * v.length)),
          k.group.axes[t.x + "Label"]
            .transition()
            .duration(l)
            .text(w.labels[t.x])
            .attr(
              "transform",
              "translate(" + (m.left + e / 2) + "," + (d + 30 + m.top) + ")"
            ),
          k.group.axes[t.y + "Label"]
            .transition()
            .duration(l)
            .attr(
              "transform",
              "translate(" +
                (m.left - I - 10) +
                "," +
                (d / 2 + m.top) +
                "),rotate(-90)"
            )
            .text(w.labels[t.y]),
          k.group.columns
            .transition()
            .duration(l)
            .attr("transform", "translate(" + m.left + "," + m.top + ")"),
          z(v),
          v.forEach(function (a) {
            y(a);
          }),
          d3.timer.flush(),
          s && s(),
          A
        );
      }),
      A
    );
  }),
  (AD.CHARTS.iframeChart = function () {
    var a = AD.CONSTANTS.DEFAULTWIDTH(),
      b = AD.CONSTANTS.DEFAULTHEIGHT(),
      c = !0,
      d = d3.select("body"),
      e = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      f = (AD.CONSTANTS.DEFAULTFORCEDMARGIN(), AD.CONSTANTS.DEFAULTCOLOR(), {}),
      g = {
        elementMouseover: function () {},
        elementMouseout: function () {},
        elementClick: function () {},
      },
      h = {};
    return (
      (h.select = function (a) {
        return (d = d3.select(a)), (c = !0), h;
      }),
      (h.selection = function (a) {
        return arguments.length ? ((d = a), (c = !0), h) : d;
      }),
      (h.width = function (b) {
        return arguments.length ? ((a = b), h) : a;
      }),
      (h.height = function (a) {
        return arguments.length ? ((b = a), h) : b;
      }),
      (h.animationDuration = function (a) {
        return arguments.length ? ((e = a), h) : e;
      }),
      (h.on = function (a, b) {
        return (
          (a = a.split(".")),
          arguments.length
            ? 1 == arguments.length
              ? a[1]
                ? g[a[0]][a[1]]
                : g[a[0]]["default"]
              : (a[1] ? (g[a[0]][a[1]] = b) : (g[a[0]]["default"] = b), h)
            : g
        );
      }),
      (h.data = function (a, b) {
        return arguments.length
          ? (b && (f = {}), (c = !0), (f = a.data), h)
          : f;
      }),
      (h.generate = function (a) {
        (c = !1),
          d.selectAll("*").remove(),
          (d.div = d
            .append("div")
            .attr("class", "ad-iframe-chart ad-container")),
          (d.div.iframe = d.div
            .append("iframe")
            .attr("class", "ad-iframe")
            .attr("src", f.url));
        var b = e;
        return h.animationDuration(0).update(a).animationDuration(b), h;
      }),
      (h.update = function (f) {
        return c
          ? h.generate(f)
          : (d.div.iframe
              .transition()
              .duration(e)
              .attr("width", a)
              .attr("height", b),
            d3.timer.flush(),
            f && f(),
            h);
      }),
      h
    );
  }),
  (AD.DASHBOARDS.dashboard = function () {
    var a = AD.CONSTANTS.DEFAULTWIDTH(),
      b = AD.CONSTANTS.DEFAULTMARGIN(),
      c = a - 200,
      d = !0,
      e = d3.select("body"),
      f = AD.CONSTANTS.ANIMATIONLENGTHS().normal,
      g = (AD.CONSTANTS.DEFAULTFORCEDMARGIN(), new AD.UTILS.chartPage()),
      h = {};
    (h.array = []),
      (h.position = -1),
      (h.pushNew = function (a) {
        (h.array = h.array.slice(0, h.position + 1)),
          h.position++,
          h.array.push({ category: a.category, section: a.section });
      });
    var i = { section: {}, category: {} },
      j = !0,
      k = {},
      l = AD.CONSTANTS.DEFAULTPALETTE,
      m = function (a) {
        a &&
          a.forEach(function (a) {
            a.charts &&
              a.charts.forEach(function (a) {
                a.chart = k.dashboard.charts[a.reference];
              });
          });
      },
      n = function (a, b, c) {
        b.forEach(function (b) {
          m(b.categories),
            (b.position = a.concat([{ section: b, sectionGroup: c }])),
            b.sections &&
              n(a.concat([{ section: b, sectionGroup: c }]), b.sections),
            b.sectionGroups &&
              o(a.concat([{ section: b, sectionGroup: c }]), b.sectionGroups);
        });
      },
      o = function (a, b) {
        b.forEach(function (b) {
          b.sections && n(a, b.sections, b);
        });
      },
      p = function (a) {
        for (chart in a.dashboard.charts)
          AD.UTILS.chartAdapter(
            a.dashboard.charts[chart].type,
            a.dashboard.charts[chart]
          );
        n([], [a.dashboard.topSection]);
      },
      q = function () {
        e.container.content.breadcrumbs.svg
          .selectAll(".ad-breadcrumb-sub-section-group-section")
          .transition()
          .duration(f / 2)
          .style("opacity", 0),
          e.container.content.breadcrumbs.svg
            .selectAll(".ad-breadcrumb")
            .each(function () {
              this.expanded = !1;
            }),
          e.container.content.breadcrumbs.svg.style("height", "30px");
      },
      r = function () {
        var a = 9,
          b = e.container.content.breadcrumbs.svg
            .selectAll("g.ad-breadcrumb")
            .data(i.section.position, function (a) {
              return a.section.name;
            }),
          c = b
            .enter()
            .append("g")
            .style("opacity", 0)
            .attr("class", "ad-breadcrumb");
        c.append("path").style("fill", l.primary),
          c
            .append("text")
            .text(function (a) {
              return a.section.name;
            })
            .attr("y", 21)
            .attr("x", 15),
          b.each(function (c, d) {
            var g,
              h = this,
              j = d3.select(h),
              k = j.select("text"),
              m = j.select("path"),
              n = k.node().getBBox().width + 25;
            if (
              (j.select("g.ad-breadcrumb-triangle").remove(),
              c.section != i.section
                ? j.classed("ad-innactive", !1).on("click", function (a) {
                    w(a.section);
                  })
                : j.classed("ad-innactive", !0).on("click", function () {}),
              c.sectionGroup)
            ) {
              var o = j
                .selectAll("g.ad-breadcrumb-sub-section-group-section")
                .data(
                  c.sectionGroup.sections.filter(function (a) {
                    return a != c.section;
                  })
                );
              (h.dyExpanded = 0), (h.expanded = !1);
              var p = o
                .enter()
                .append("g")
                .style("opacity", 0)
                .attr("class", "ad-breadcrumb-sub-section-group-section");
              p.append("path"),
                p
                  .append("text")
                  .attr("y", 21)
                  .attr("x", 15)
                  .text(function (a) {
                    return a.name;
                  }),
                o
                  .each(function () {
                    var b = d3.select(this),
                      c = b.select("path"),
                      d = b.select("text"),
                      e = d.node().getBBox().width + 25;
                    c.attr(
                      "d",
                      "M 0 0 L " +
                        a +
                        " 15 L 0 30 L " +
                        e +
                        " 30 L " +
                        (e + a) +
                        " 15 L " +
                        e +
                        " 0 L 0 0 Z"
                    );
                  })
                  .on("click", function (a) {
                    d3.event.stopPropagation(), w(a);
                  })
                  .attr("transform", function (a, b) {
                    return "translate(0," + 34 * (b + 1) + ")";
                  }),
                (h.dyExpanded = 34 * (o.size() + 5)),
                (n += 15),
                (g = j
                  .append("g")
                  .attr("class", "ad-breadcrumb-triangle")
                  .on("click", function () {
                    d3.event.stopPropagation(),
                      h.expanded
                        ? (o
                            .transition()
                            .duration(f / 2)
                            .style("opacity", 0),
                          e.container.content.breadcrumbs.svg.style(
                            "height",
                            "30px"
                          ))
                        : (q(),
                          e.container.content.breadcrumbs.svg.style(
                            "height",
                            Math.max(30, h.dyExpanded) + "px"
                          ),
                          o
                            .transition()
                            .duration(f / 2)
                            .delay(function (a, b) {
                              return 20 * b;
                            })
                            .style("opacity", 1)),
                      (h.expanded = !h.expanded);
                  })),
                g
                  .append("rect")
                  .attr("width", 20)
                  .attr("height", 30)
                  .style("fill", d3.rgb(l.primary).darker(2))
                  .attr("transform", "translate(" + (n - 20) + ",0)"),
                g
                  .append("path")
                  .attr("d", "M 0 0 L 9 0 L 4.5 5 L 0 0")
                  .style("fill", "white")
                  .attr("transform", "translate(" + (n - 15) + ",13)");
            }
            var r = a,
              s = a;
            0 == d && (r = 0),
              d + 1 == b.size() && (s = 0),
              m
                .transition()
                .duration(f)
                .attr(
                  "d",
                  "M 0 0 L " +
                    r +
                    " 15 L 0 30 L " +
                    n +
                    " 30 L " +
                    (n + s) +
                    " 15 L " +
                    n +
                    " 0 L 5 0 Z"
                ),
              (this.dx = n);
          });
        var d = 0;
        b
          .transition()
          .duration(f)
          .attr("transform", function () {
            var a = "translate(" + d + ",0)";
            return (d += this.dx + 2), a;
          })
          .style("opacity", 1),
          b.exit().transition().duration(f).style("opacity", 0).remove();
      },
      s = function () {
        if (!i.section.categories || i.section.categories.length < 1)
          return void e.container.header.navigation.categoryTabs
            .style("display", "none")
            .selectAll("*")
            .remove();
        e.container.header.navigation.categoryTabs.style("display", "");
        var a = e.container.header.navigation.categoryTabs
          .selectAll("li.ad-category-tab")
          .data(i.section.categories);
        a.enter().append("li").attr("class", "ad-category-tab").on("click", x),
          a
            .text(function (a) {
              return a.name;
            })
            .each(function (a) {
              a == i.category
                ? d3
                    .select(this)
                    .classed("ad-innactive", !0)
                    .on("click", function () {})
                : d3.select(this).classed("ad-innactive", !1).on("click", x);
            }),
          a.exit().transition().duration(f).style("opacity", 0).remove();
      },
      t = function () {
        if (!i.section.sections || i.section.sections.length < 1)
          return void e.container.sidebar.subSections
            .style("display", "none")
            .selectAll("*")
            .remove();
        e.container.sidebar.subSections.style("display", "");
        var a = e.container.sidebar.subSections
          .selectAll("li.ad-sub-section")
          .data(i.section.sections);
        a
          .enter()
          .append("li")
          .style("opacity", 0)
          .attr("class", "ad-sub-section")
          .on("click", w),
          a
            .text(function (a) {
              return a.name;
            })
            .transition()
            .duration(f)
            .style("opacity", 1),
          a.exit().transition().duration(f).style("opacity", 0).remove();
      },
      u = function () {
        if (!i.section.sectionGroups || i.section.sectionGroups.length < 1)
          return void e.container.sidebar.subSectionGroups
            .style("display", "none")
            .selectAll("*")
            .remove();
        var a = i.section.sectionGroups.filter(function (a) {
          return a.sections.length > 0;
        });
        if (a.length < 1)
          return void e.container.sidebar.subSectionGroups
            .style("display", "none")
            .selectAll("*")
            .remove();
        e.container.sidebar.subSectionGroups.style("display", "");
        var b = e.container.sidebar.subSectionGroups
          .selectAll("li.ad-sub-section-group")
          .data(a);
        b
          .enter()
          .append("li")
          .style("opacity", 0)
          .attr("class", "ad-sub-section-group"),
          b.transition().duration(f).style("opacity", 1),
          b
            .text(function (a) {
              return a.name;
            })
            .each(v),
          b.exit().transition().duration(f).style("opacity", 0).remove();
      },
      v = function (a) {
        if (a.sections && !(a.sections.length < 1)) {
          var b = d3.select(this);
          b.selectAll("*").remove();
          var c = b
              .append("ul")
              .datum(a)
              .attr("class", "ad-sub-section-group-sections"),
            d = c
              .selectAll("li.ad-sub-section-group-section")
              .data(function (a) {
                return a.sections;
              });
          d.enter().append("li").attr("class", "ad-sub-section-group-section"),
            d.on("click", w),
            d.text(function (a) {
              return a.name;
            });
        }
      },
      w = function (a) {
        q(), (i.section = a);
        var b = a.categories.filter(function (a) {
          return a.name == i.category.name;
        });
        return x(b.length > 0 ? b[0] : a.categories[0]);
      },
      x = function (a) {
        return (
          (i.category = a),
          h.pushNew(i),
          g.animationType("forward").data({ data: i.category }).update(),
          y.update()
        );
      },
      y = {};
    return (
      (y.select = function (a) {
        return (e = d3.select(a)), (d = !0), y;
      }),
      (y.selection = function (a) {
        return arguments.length ? ((e = a), (d = !0), y) : e;
      }),
      (y.width = function (b) {
        return arguments.length
          ? ((a = b), (c = a - 200), g.width(c - 10), (j = !0), y)
          : a;
      }),
      (y.margin = function (a) {
        return arguments.length
          ? (a.left && (b.left = a.left),
            a.right && (b.right = a.right),
            a.top && (b.top = a.top),
            a.bottom && (b.bottom = a.bottom),
            y)
          : b;
      }),
      (y.palette = function (a) {
        return arguments.length ? ((l = a), y) : l;
      }),
      (y.animationDuration = function (a) {
        return arguments.length ? ((f = a), g.animationDuration(f), y) : f;
      }),
      (y.data = function (a, b) {
        return arguments.length
          ? (b && ((d = !0), (k = {})), (k = a), p(k), y)
          : f;
      }),
      (y.generate = function (a) {
        (d = !1),
          e.selectAll("*").remove(),
          (e.container = e
            .append("div")
            .attr("class", "ad-dashboard ad-container")),
          (e.container.header = e.container
            .append("div")
            .attr("class", "ad-header")),
          (e.container.header.navigation = e.container.header
            .append("div")
            .attr("class", "ad-navigation")),
          (e.container.header.navigation.home = e.container.header.navigation
            .append("div")
            .attr("class", "ad-navigation-home")),
          e.container.header.navigation.home
            .append("i")
            .attr("class", "fa fa-home"),
          (e.container.header.navigation.arrows = e.container.header.navigation
            .append("div")
            .attr("class", "ad-navigation-arrows")),
          (e.container.header.navigation.arrows.left = e.container.header.navigation.arrows
            .append("div")
            .attr("id", "ad-left-arrow")),
          (e.container.header.navigation.arrows.right = e.container.header.navigation.arrows
            .append("div")
            .attr("id", "ad-right-arrow")),
          e.container.header.navigation.arrows.left
            .append("i")
            .attr("class", "fa fa-chevron-left"),
          e.container.header.navigation.arrows.right
            .append("i")
            .attr("class", "fa fa-chevron-right"),
          (e.container.header.navigation.categoryTabs = e.container.header.navigation
            .append("ul")
            .attr("class", "ad-category-tabs")),
          (e.container.sidebar = e.container
            .append("div")
            .attr("class", "ad-dashboard-sidebar")),
          (e.container.sidebar.subSections = e.container.sidebar
            .append("ul")
            .attr("class", "ad-sub-sections")),
          (e.container.sidebar.subSectionGroups = e.container.sidebar
            .append("ul")
            .attr("class", "ad-sub-section-groups")),
          (e.container.content = e.container
            .append("div")
            .attr("class", "ad-dashboard-content")),
          (e.container.content.breadcrumbs = e.container.content
            .append("div")
            .attr("class", "ad-navigation-breadcrumbs")),
          (e.container.content.breadcrumbs.svg = e.container.content.breadcrumbs
            .append("svg")
            .attr("class", "ad-navigation-breadcrumbs-svg")),
          (e.container.content.chartPage = e.container.content
            .append("div")
            .attr("class", "ad-dashboard-chart-page")),
          g.selection(e.container.content.chartPage),
          w(k.dashboard.topSection);
        return y.update(a), y;
      }),
      (y.update = function (b) {
        return d
          ? y.generate(b)
          : (e.container.content.style("width", c + "px"),
            i.section == k.dashboard.topSection
              ? e.container.header.navigation.home
                  .classed("ad-innactive", !0)
                  .on("click", function () {})
              : e.container.header.navigation.home
                  .classed("ad-innactive", !1)
                  .on("click", function () {
                    w(k.dashboard.topSection);
                  }),
            h.position + 1 == h.array.length
              ? e.container.header.navigation.arrows.right
                  .classed("ad-innactive", !0)
                  .on("click", function () {})
              : e.container.header.navigation.arrows.right
                  .classed("ad-innactive", !1)
                  .on("click", function () {
                    h.position++,
                      (i = {
                        category: h.array[h.position].category,
                        section: h.array[h.position].section,
                      }),
                      q(),
                      g
                        .animationType("forward")
                        .data({ data: i.category })
                        .update(),
                      y.update();
                  }),
            0 == h.position
              ? e.container.header.navigation.arrows.left
                  .classed("ad-innactive", !0)
                  .on("click", function () {})
              : e.container.header.navigation.arrows.left
                  .classed("ad-innactive", !1)
                  .on("click", function () {
                    h.position--,
                      (i = {
                        category: h.array[h.position].category,
                        section: h.array[h.position].section,
                      }),
                      q(),
                      g
                        .animationType("backward")
                        .data({ data: i.category })
                        .update(),
                      y.update();
                  }),
            e.container
              .transition()
              .delay(f)
              .duration(f)
              .style("width", a + "px"),
            s(),
            r(),
            t(),
            u(),
            j && ((j = !1), g.update()),
            d3.timer.flush(),
            b && b(),
            y);
      }),
      y
    );
  }),
  (d3.sankey = function () {
    function a() {
      n.forEach(function (a) {
        (a.sourceLinks = []), (a.targetLinks = []);
      }),
        o.forEach(function (a) {
          var b = a.source,
            c = a.target;
          "number" == typeof b && (b = a.source = n[a.source]),
            "number" == typeof c && (c = a.target = n[a.target]),
            b.sourceLinks.push(a),
            c.targetLinks.push(a);
        });
    }
    function b() {
      n.forEach(function (a) {
        a.value = Math.max(d3.sum(a.sourceLinks, i), d3.sum(a.targetLinks, i));
      });
    }
    function c() {
      for (var a, b = n, c = 0; b.length; )
        (a = []),
          b.forEach(function (b) {
            (b.x = c),
              (b.dx = k),
              b.sourceLinks.forEach(function (b) {
                a.indexOf(b.target) < 0 && a.push(b.target);
              });
          }),
          (b = a),
          ++c;
      d(c), e((m[0] - k) / (c - 1));
    }
    function d(a) {
      n.forEach(function (b) {
        b.sourceLinks.length || (b.x = a - 1);
      });
    }
    function e(a) {
      n.forEach(function (b) {
        b.x *= a;
      });
    }
    function f(a) {
      function b() {
        var a = d3.min(g, function (a) {
          return (m[1] - (a.length - 1) * l) / d3.sum(a, i);
        });
        g.forEach(function (b) {
          b.forEach(function (b, c) {
            (b.y = c), (b.dy = b.value * a);
          });
        }),
          o.forEach(function (b) {
            b.dy = b.value * a;
          });
      }
      function c(a) {
        function b(a) {
          return h(a.source) * a.value;
        }
        g.forEach(function (c) {
          c.forEach(function (c) {
            if (c.targetLinks.length) {
              var d = d3.sum(c.targetLinks, b) / d3.sum(c.targetLinks, i);
              c.y += (d - h(c)) * a;
            }
          });
        });
      }
      function d(a) {
        function b(a) {
          return h(a.target) * a.value;
        }
        g.slice()
          .reverse()
          .forEach(function (c) {
            c.forEach(function (c) {
              if (c.sourceLinks.length) {
                var d = d3.sum(c.sourceLinks, b) / d3.sum(c.sourceLinks, i);
                c.y += (d - h(c)) * a;
              }
            });
          });
      }
      function e() {
        g.forEach(function (a) {
          var b,
            c,
            d,
            e = 0,
            g = a.length;
          for (a.sort(f), d = 0; g > d; ++d)
            (b = a[d]),
              (c = e - b.y),
              c > 0 && (b.y += c),
              (e = b.y + b.dy + l);
          if (((c = e - l - m[1]), c > 0))
            for (e = b.y -= c, d = g - 2; d >= 0; --d)
              (b = a[d]),
                (c = b.y + b.dy + l - e),
                c > 0 && (b.y -= c),
                (e = b.y);
        });
      }
      function f(a, b) {
        return a.y - b.y;
      }
      var g = d3
        .nest()
        .key(function (a) {
          return a.x;
        })
        .sortKeys(d3.ascending)
        .entries(n)
        .map(function (a) {
          return a.values;
        });
      b(), e();
      for (var j = 1; a > 0; --a) d((j *= 0.99)), e(), c(j), e();
    }
    function g() {
      function a(a, b) {
        return a.source.y - b.source.y;
      }
      function b(a, b) {
        return a.target.y - b.target.y;
      }
      n.forEach(function (c) {
        c.sourceLinks.sort(b), c.targetLinks.sort(a);
      }),
        n.forEach(function (a) {
          var b = 0,
            c = 0;
          a.sourceLinks.forEach(function (a) {
            (a.sy = b), (b += a.dy);
          }),
            a.targetLinks.forEach(function (a) {
              (a.ty = c), (c += a.dy);
            });
        });
    }
    function h(a) {
      return a.y + a.dy / 2;
    }
    function i(a) {
      return a.value;
    }
    var j = {},
      k = 24,
      l = 8,
      m = [1, 1],
      n = [],
      o = [];
    return (
      (j.nodeWidth = function (a) {
        return arguments.length ? ((k = +a), j) : k;
      }),
      (j.nodePadding = function (a) {
        return arguments.length ? ((l = +a), j) : l;
      }),
      (j.nodes = function (a) {
        return arguments.length ? ((n = a), j) : n;
      }),
      (j.links = function (a) {
        return arguments.length ? ((o = a), j) : o;
      }),
      (j.size = function (a) {
        return arguments.length ? ((m = a), j) : m;
      }),
      (j.layout = function (d) {
        return a(), b(), c(), f(d), g(), j;
      }),
      (j.relayout = function () {
        return g(), j;
      }),
      (j.link = function () {
        function a(a) {
          var c = a.source.x + a.source.dx,
            d = a.target.x,
            e = d3.interpolateNumber(c, d),
            f = e(b),
            g = e(1 - b),
            h = a.source.y + a.sy + a.dy / 2,
            i = a.target.y + a.ty + a.dy / 2;
          return (
            "M" +
            c +
            "," +
            h +
            "C" +
            f +
            "," +
            h +
            " " +
            g +
            "," +
            i +
            " " +
            d +
            "," +
            i
          );
        }
        var b = 0.5;
        return (
          (a.curvature = function (c) {
            return arguments.length ? ((b = +c), a) : b;
          }),
          a
        );
      }),
      j
    );
  });
var colorbrewer = {
  YlGn: {
    3: ["#f7fcb9", "#addd8e", "#31a354"],
    4: ["#ffffcc", "#c2e699", "#78c679", "#238443"],
    5: ["#ffffcc", "#c2e699", "#78c679", "#31a354", "#006837"],
    6: ["#ffffcc", "#d9f0a3", "#addd8e", "#78c679", "#31a354", "#006837"],
    7: [
      "#ffffcc",
      "#d9f0a3",
      "#addd8e",
      "#78c679",
      "#41ab5d",
      "#238443",
      "#005a32",
    ],
    8: [
      "#ffffe5",
      "#f7fcb9",
      "#d9f0a3",
      "#addd8e",
      "#78c679",
      "#41ab5d",
      "#238443",
      "#005a32",
    ],
    9: [
      "#ffffe5",
      "#f7fcb9",
      "#d9f0a3",
      "#addd8e",
      "#78c679",
      "#41ab5d",
      "#238443",
      "#006837",
      "#004529",
    ],
  },
  YlGnBu: {
    3: ["#edf8b1", "#7fcdbb", "#2c7fb8"],
    4: ["#ffffcc", "#a1dab4", "#41b6c4", "#225ea8"],
    5: ["#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#253494"],
    6: ["#ffffcc", "#c7e9b4", "#7fcdbb", "#41b6c4", "#2c7fb8", "#253494"],
    7: [
      "#ffffcc",
      "#c7e9b4",
      "#7fcdbb",
      "#41b6c4",
      "#1d91c0",
      "#225ea8",
      "#0c2c84",
    ],
    8: [
      "#ffffd9",
      "#edf8b1",
      "#c7e9b4",
      "#7fcdbb",
      "#41b6c4",
      "#1d91c0",
      "#225ea8",
      "#0c2c84",
    ],
    9: [
      "#ffffd9",
      "#edf8b1",
      "#c7e9b4",
      "#7fcdbb",
      "#41b6c4",
      "#1d91c0",
      "#225ea8",
      "#253494",
      "#081d58",
    ],
  },
  GnBu: {
    3: ["#e0f3db", "#a8ddb5", "#43a2ca"],
    4: ["#f0f9e8", "#bae4bc", "#7bccc4", "#2b8cbe"],
    5: ["#f0f9e8", "#bae4bc", "#7bccc4", "#43a2ca", "#0868ac"],
    6: ["#f0f9e8", "#ccebc5", "#a8ddb5", "#7bccc4", "#43a2ca", "#0868ac"],
    7: [
      "#f0f9e8",
      "#ccebc5",
      "#a8ddb5",
      "#7bccc4",
      "#4eb3d3",
      "#2b8cbe",
      "#08589e",
    ],
    8: [
      "#f7fcf0",
      "#e0f3db",
      "#ccebc5",
      "#a8ddb5",
      "#7bccc4",
      "#4eb3d3",
      "#2b8cbe",
      "#08589e",
    ],
    9: [
      "#f7fcf0",
      "#e0f3db",
      "#ccebc5",
      "#a8ddb5",
      "#7bccc4",
      "#4eb3d3",
      "#2b8cbe",
      "#0868ac",
      "#084081",
    ],
  },
  BuGn: {
    3: ["#e5f5f9", "#99d8c9", "#2ca25f"],
    4: ["#edf8fb", "#b2e2e2", "#66c2a4", "#238b45"],
    5: ["#edf8fb", "#b2e2e2", "#66c2a4", "#2ca25f", "#006d2c"],
    6: ["#edf8fb", "#ccece6", "#99d8c9", "#66c2a4", "#2ca25f", "#006d2c"],
    7: [
      "#edf8fb",
      "#ccece6",
      "#99d8c9",
      "#66c2a4",
      "#41ae76",
      "#238b45",
      "#005824",
    ],
    8: [
      "#f7fcfd",
      "#e5f5f9",
      "#ccece6",
      "#99d8c9",
      "#66c2a4",
      "#41ae76",
      "#238b45",
      "#005824",
    ],
    9: [
      "#f7fcfd",
      "#e5f5f9",
      "#ccece6",
      "#99d8c9",
      "#66c2a4",
      "#41ae76",
      "#238b45",
      "#006d2c",
      "#00441b",
    ],
  },
  PuBuGn: {
    3: ["#ece2f0", "#a6bddb", "#1c9099"],
    4: ["#f6eff7", "#bdc9e1", "#67a9cf", "#02818a"],
    5: ["#f6eff7", "#bdc9e1", "#67a9cf", "#1c9099", "#016c59"],
    6: ["#f6eff7", "#d0d1e6", "#a6bddb", "#67a9cf", "#1c9099", "#016c59"],
    7: [
      "#f6eff7",
      "#d0d1e6",
      "#a6bddb",
      "#67a9cf",
      "#3690c0",
      "#02818a",
      "#016450",
    ],
    8: [
      "#fff7fb",
      "#ece2f0",
      "#d0d1e6",
      "#a6bddb",
      "#67a9cf",
      "#3690c0",
      "#02818a",
      "#016450",
    ],
    9: [
      "#fff7fb",
      "#ece2f0",
      "#d0d1e6",
      "#a6bddb",
      "#67a9cf",
      "#3690c0",
      "#02818a",
      "#016c59",
      "#014636",
    ],
  },
  PuBu: {
    3: ["#ece7f2", "#a6bddb", "#2b8cbe"],
    4: ["#f1eef6", "#bdc9e1", "#74a9cf", "#0570b0"],
    5: ["#f1eef6", "#bdc9e1", "#74a9cf", "#2b8cbe", "#045a8d"],
    6: ["#f1eef6", "#d0d1e6", "#a6bddb", "#74a9cf", "#2b8cbe", "#045a8d"],
    7: [
      "#f1eef6",
      "#d0d1e6",
      "#a6bddb",
      "#74a9cf",
      "#3690c0",
      "#0570b0",
      "#034e7b",
    ],
    8: [
      "#fff7fb",
      "#ece7f2",
      "#d0d1e6",
      "#a6bddb",
      "#74a9cf",
      "#3690c0",
      "#0570b0",
      "#034e7b",
    ],
    9: [
      "#fff7fb",
      "#ece7f2",
      "#d0d1e6",
      "#a6bddb",
      "#74a9cf",
      "#3690c0",
      "#0570b0",
      "#045a8d",
      "#023858",
    ],
  },
  BuPu: {
    3: ["#e0ecf4", "#9ebcda", "#8856a7"],
    4: ["#edf8fb", "#b3cde3", "#8c96c6", "#88419d"],
    5: ["#edf8fb", "#b3cde3", "#8c96c6", "#8856a7", "#810f7c"],
    6: ["#edf8fb", "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c"],
    7: [
      "#edf8fb",
      "#bfd3e6",
      "#9ebcda",
      "#8c96c6",
      "#8c6bb1",
      "#88419d",
      "#6e016b",
    ],
    8: [
      "#f7fcfd",
      "#e0ecf4",
      "#bfd3e6",
      "#9ebcda",
      "#8c96c6",
      "#8c6bb1",
      "#88419d",
      "#6e016b",
    ],
    9: [
      "#f7fcfd",
      "#e0ecf4",
      "#bfd3e6",
      "#9ebcda",
      "#8c96c6",
      "#8c6bb1",
      "#88419d",
      "#810f7c",
      "#4d004b",
    ],
  },
  RdPu: {
    3: ["#fde0dd", "#fa9fb5", "#c51b8a"],
    4: ["#feebe2", "#fbb4b9", "#f768a1", "#ae017e"],
    5: ["#feebe2", "#fbb4b9", "#f768a1", "#c51b8a", "#7a0177"],
    6: ["#feebe2", "#fcc5c0", "#fa9fb5", "#f768a1", "#c51b8a", "#7a0177"],
    7: [
      "#feebe2",
      "#fcc5c0",
      "#fa9fb5",
      "#f768a1",
      "#dd3497",
      "#ae017e",
      "#7a0177",
    ],
    8: [
      "#fff7f3",
      "#fde0dd",
      "#fcc5c0",
      "#fa9fb5",
      "#f768a1",
      "#dd3497",
      "#ae017e",
      "#7a0177",
    ],
    9: [
      "#fff7f3",
      "#fde0dd",
      "#fcc5c0",
      "#fa9fb5",
      "#f768a1",
      "#dd3497",
      "#ae017e",
      "#7a0177",
      "#49006a",
    ],
  },
  PuRd: {
    3: ["#e7e1ef", "#c994c7", "#dd1c77"],
    4: ["#f1eef6", "#d7b5d8", "#df65b0", "#ce1256"],
    5: ["#f1eef6", "#d7b5d8", "#df65b0", "#dd1c77", "#980043"],
    6: ["#f1eef6", "#d4b9da", "#c994c7", "#df65b0", "#dd1c77", "#980043"],
    7: [
      "#f1eef6",
      "#d4b9da",
      "#c994c7",
      "#df65b0",
      "#e7298a",
      "#ce1256",
      "#91003f",
    ],
    8: [
      "#f7f4f9",
      "#e7e1ef",
      "#d4b9da",
      "#c994c7",
      "#df65b0",
      "#e7298a",
      "#ce1256",
      "#91003f",
    ],
    9: [
      "#f7f4f9",
      "#e7e1ef",
      "#d4b9da",
      "#c994c7",
      "#df65b0",
      "#e7298a",
      "#ce1256",
      "#980043",
      "#67001f",
    ],
  },
  OrRd: {
    3: ["#fee8c8", "#fdbb84", "#e34a33"],
    4: ["#fef0d9", "#fdcc8a", "#fc8d59", "#d7301f"],
    5: ["#fef0d9", "#fdcc8a", "#fc8d59", "#e34a33", "#b30000"],
    6: ["#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#e34a33", "#b30000"],
    7: [
      "#fef0d9",
      "#fdd49e",
      "#fdbb84",
      "#fc8d59",
      "#ef6548",
      "#d7301f",
      "#990000",
    ],
    8: [
      "#fff7ec",
      "#fee8c8",
      "#fdd49e",
      "#fdbb84",
      "#fc8d59",
      "#ef6548",
      "#d7301f",
      "#990000",
    ],
    9: [
      "#fff7ec",
      "#fee8c8",
      "#fdd49e",
      "#fdbb84",
      "#fc8d59",
      "#ef6548",
      "#d7301f",
      "#b30000",
      "#7f0000",
    ],
  },
  YlOrRd: {
    3: ["#ffeda0", "#feb24c", "#f03b20"],
    4: ["#ffffb2", "#fecc5c", "#fd8d3c", "#e31a1c"],
    5: ["#ffffb2", "#fecc5c", "#fd8d3c", "#f03b20", "#bd0026"],
    6: ["#ffffb2", "#fed976", "#feb24c", "#fd8d3c", "#f03b20", "#bd0026"],
    7: [
      "#ffffb2",
      "#fed976",
      "#feb24c",
      "#fd8d3c",
      "#fc4e2a",
      "#e31a1c",
      "#b10026",
    ],
    8: [
      "#ffffcc",
      "#ffeda0",
      "#fed976",
      "#feb24c",
      "#fd8d3c",
      "#fc4e2a",
      "#e31a1c",
      "#b10026",
    ],
    9: [
      "#ffffcc",
      "#ffeda0",
      "#fed976",
      "#feb24c",
      "#fd8d3c",
      "#fc4e2a",
      "#e31a1c",
      "#bd0026",
      "#800026",
    ],
  },
  YlOrBr: {
    3: ["#fff7bc", "#fec44f", "#d95f0e"],
    4: ["#ffffd4", "#fed98e", "#fe9929", "#cc4c02"],
    5: ["#ffffd4", "#fed98e", "#fe9929", "#d95f0e", "#993404"],
    6: ["#ffffd4", "#fee391", "#fec44f", "#fe9929", "#d95f0e", "#993404"],
    7: [
      "#ffffd4",
      "#fee391",
      "#fec44f",
      "#fe9929",
      "#ec7014",
      "#cc4c02",
      "#8c2d04",
    ],
    8: [
      "#ffffe5",
      "#fff7bc",
      "#fee391",
      "#fec44f",
      "#fe9929",
      "#ec7014",
      "#cc4c02",
      "#8c2d04",
    ],
    9: [
      "#ffffe5",
      "#fff7bc",
      "#fee391",
      "#fec44f",
      "#fe9929",
      "#ec7014",
      "#cc4c02",
      "#993404",
      "#662506",
    ],
  },
  Purples: {
    3: ["#efedf5", "#bcbddc", "#756bb1"],
    4: ["#f2f0f7", "#cbc9e2", "#9e9ac8", "#6a51a3"],
    5: ["#f2f0f7", "#cbc9e2", "#9e9ac8", "#756bb1", "#54278f"],
    6: ["#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#756bb1", "#54278f"],
    7: [
      "#f2f0f7",
      "#dadaeb",
      "#bcbddc",
      "#9e9ac8",
      "#807dba",
      "#6a51a3",
      "#4a1486",
    ],
    8: [
      "#fcfbfd",
      "#efedf5",
      "#dadaeb",
      "#bcbddc",
      "#9e9ac8",
      "#807dba",
      "#6a51a3",
      "#4a1486",
    ],
    9: [
      "#fcfbfd",
      "#efedf5",
      "#dadaeb",
      "#bcbddc",
      "#9e9ac8",
      "#807dba",
      "#6a51a3",
      "#54278f",
      "#3f007d",
    ],
  },
  Blues: {
    3: ["#deebf7", "#9ecae1", "#3182bd"],
    4: ["#eff3ff", "#bdd7e7", "#6baed6", "#2171b5"],
    5: ["#eff3ff", "#bdd7e7", "#6baed6", "#3182bd", "#08519c"],
    6: ["#eff3ff", "#c6dbef", "#9ecae1", "#6baed6", "#3182bd", "#08519c"],
    7: [
      "#eff3ff",
      "#c6dbef",
      "#9ecae1",
      "#6baed6",
      "#4292c6",
      "#2171b5",
      "#084594",
    ],
    8: [
      "#f7fbff",
      "#deebf7",
      "#c6dbef",
      "#9ecae1",
      "#6baed6",
      "#4292c6",
      "#2171b5",
      "#084594",
    ],
    9: [
      "#f7fbff",
      "#deebf7",
      "#c6dbef",
      "#9ecae1",
      "#6baed6",
      "#4292c6",
      "#2171b5",
      "#08519c",
      "#08306b",
    ],
  },
  Greens: {
    3: ["#e5f5e0", "#a1d99b", "#31a354"],
    4: ["#edf8e9", "#bae4b3", "#74c476", "#238b45"],
    5: ["#edf8e9", "#bae4b3", "#74c476", "#31a354", "#006d2c"],
    6: ["#edf8e9", "#c7e9c0", "#a1d99b", "#74c476", "#31a354", "#006d2c"],
    7: [
      "#edf8e9",
      "#c7e9c0",
      "#a1d99b",
      "#74c476",
      "#41ab5d",
      "#238b45",
      "#005a32",
    ],
    8: [
      "#f7fcf5",
      "#e5f5e0",
      "#c7e9c0",
      "#a1d99b",
      "#74c476",
      "#41ab5d",
      "#238b45",
      "#005a32",
    ],
    9: [
      "#f7fcf5",
      "#e5f5e0",
      "#c7e9c0",
      "#a1d99b",
      "#74c476",
      "#41ab5d",
      "#238b45",
      "#006d2c",
      "#00441b",
    ],
  },
  Oranges: {
    3: ["#fee6ce", "#fdae6b", "#e6550d"],
    4: ["#feedde", "#fdbe85", "#fd8d3c", "#d94701"],
    5: ["#feedde", "#fdbe85", "#fd8d3c", "#e6550d", "#a63603"],
    6: ["#feedde", "#fdd0a2", "#fdae6b", "#fd8d3c", "#e6550d", "#a63603"],
    7: [
      "#feedde",
      "#fdd0a2",
      "#fdae6b",
      "#fd8d3c",
      "#f16913",
      "#d94801",
      "#8c2d04",
    ],
    8: [
      "#fff5eb",
      "#fee6ce",
      "#fdd0a2",
      "#fdae6b",
      "#fd8d3c",
      "#f16913",
      "#d94801",
      "#8c2d04",
    ],
    9: [
      "#fff5eb",
      "#fee6ce",
      "#fdd0a2",
      "#fdae6b",
      "#fd8d3c",
      "#f16913",
      "#d94801",
      "#a63603",
      "#7f2704",
    ],
  },
  Reds: {
    3: ["#fee0d2", "#fc9272", "#de2d26"],
    4: ["#fee5d9", "#fcae91", "#fb6a4a", "#cb181d"],
    5: ["#fee5d9", "#fcae91", "#fb6a4a", "#de2d26", "#a50f15"],
    6: ["#fee5d9", "#fcbba1", "#fc9272", "#fb6a4a", "#de2d26", "#a50f15"],
    7: [
      "#fee5d9",
      "#fcbba1",
      "#fc9272",
      "#fb6a4a",
      "#ef3b2c",
      "#cb181d",
      "#99000d",
    ],
    8: [
      "#fff5f0",
      "#fee0d2",
      "#fcbba1",
      "#fc9272",
      "#fb6a4a",
      "#ef3b2c",
      "#cb181d",
      "#99000d",
    ],
    9: [
      "#fff5f0",
      "#fee0d2",
      "#fcbba1",
      "#fc9272",
      "#fb6a4a",
      "#ef3b2c",
      "#cb181d",
      "#a50f15",
      "#67000d",
    ],
  },
  Greys: {
    3: ["#f0f0f0", "#bdbdbd", "#636363"],
    4: ["#f7f7f7", "#cccccc", "#969696", "#525252"],
    5: ["#f7f7f7", "#cccccc", "#969696", "#636363", "#252525"],
    6: ["#f7f7f7", "#d9d9d9", "#bdbdbd", "#969696", "#636363", "#252525"],
    7: [
      "#f7f7f7",
      "#d9d9d9",
      "#bdbdbd",
      "#969696",
      "#737373",
      "#525252",
      "#252525",
    ],
    8: [
      "#ffffff",
      "#f0f0f0",
      "#d9d9d9",
      "#bdbdbd",
      "#969696",
      "#737373",
      "#525252",
      "#252525",
    ],
    9: [
      "#ffffff",
      "#f0f0f0",
      "#d9d9d9",
      "#bdbdbd",
      "#969696",
      "#737373",
      "#525252",
      "#252525",
      "#000000",
    ],
  },
  PuOr: {
    3: ["#f1a340", "#f7f7f7", "#998ec3"],
    4: ["#e66101", "#fdb863", "#b2abd2", "#5e3c99"],
    5: ["#e66101", "#fdb863", "#f7f7f7", "#b2abd2", "#5e3c99"],
    6: ["#b35806", "#f1a340", "#fee0b6", "#d8daeb", "#998ec3", "#542788"],
    7: [
      "#b35806",
      "#f1a340",
      "#fee0b6",
      "#f7f7f7",
      "#d8daeb",
      "#998ec3",
      "#542788",
    ],
    8: [
      "#b35806",
      "#e08214",
      "#fdb863",
      "#fee0b6",
      "#d8daeb",
      "#b2abd2",
      "#8073ac",
      "#542788",
    ],
    9: [
      "#b35806",
      "#e08214",
      "#fdb863",
      "#fee0b6",
      "#f7f7f7",
      "#d8daeb",
      "#b2abd2",
      "#8073ac",
      "#542788",
    ],
    10: [
      "#7f3b08",
      "#b35806",
      "#e08214",
      "#fdb863",
      "#fee0b6",
      "#d8daeb",
      "#b2abd2",
      "#8073ac",
      "#542788",
      "#2d004b",
    ],
    11: [
      "#7f3b08",
      "#b35806",
      "#e08214",
      "#fdb863",
      "#fee0b6",
      "#f7f7f7",
      "#d8daeb",
      "#b2abd2",
      "#8073ac",
      "#542788",
      "#2d004b",
    ],
  },
  BrBG: {
    3: ["#d8b365", "#f5f5f5", "#5ab4ac"],
    4: ["#a6611a", "#dfc27d", "#80cdc1", "#018571"],
    5: ["#a6611a", "#dfc27d", "#f5f5f5", "#80cdc1", "#018571"],
    6: ["#8c510a", "#d8b365", "#f6e8c3", "#c7eae5", "#5ab4ac", "#01665e"],
    7: [
      "#8c510a",
      "#d8b365",
      "#f6e8c3",
      "#f5f5f5",
      "#c7eae5",
      "#5ab4ac",
      "#01665e",
    ],
    8: [
      "#8c510a",
      "#bf812d",
      "#dfc27d",
      "#f6e8c3",
      "#c7eae5",
      "#80cdc1",
      "#35978f",
      "#01665e",
    ],
    9: [
      "#8c510a",
      "#bf812d",
      "#dfc27d",
      "#f6e8c3",
      "#f5f5f5",
      "#c7eae5",
      "#80cdc1",
      "#35978f",
      "#01665e",
    ],
    10: [
      "#543005",
      "#8c510a",
      "#bf812d",
      "#dfc27d",
      "#f6e8c3",
      "#c7eae5",
      "#80cdc1",
      "#35978f",
      "#01665e",
      "#003c30",
    ],
    11: [
      "#543005",
      "#8c510a",
      "#bf812d",
      "#dfc27d",
      "#f6e8c3",
      "#f5f5f5",
      "#c7eae5",
      "#80cdc1",
      "#35978f",
      "#01665e",
      "#003c30",
    ],
  },
  PRGn: {
    3: ["#af8dc3", "#f7f7f7", "#7fbf7b"],
    4: ["#7b3294", "#c2a5cf", "#a6dba0", "#008837"],
    5: ["#7b3294", "#c2a5cf", "#f7f7f7", "#a6dba0", "#008837"],
    6: ["#762a83", "#af8dc3", "#e7d4e8", "#d9f0d3", "#7fbf7b", "#1b7837"],
    7: [
      "#762a83",
      "#af8dc3",
      "#e7d4e8",
      "#f7f7f7",
      "#d9f0d3",
      "#7fbf7b",
      "#1b7837",
    ],
    8: [
      "#762a83",
      "#9970ab",
      "#c2a5cf",
      "#e7d4e8",
      "#d9f0d3",
      "#a6dba0",
      "#5aae61",
      "#1b7837",
    ],
    9: [
      "#762a83",
      "#9970ab",
      "#c2a5cf",
      "#e7d4e8",
      "#f7f7f7",
      "#d9f0d3",
      "#a6dba0",
      "#5aae61",
      "#1b7837",
    ],
    10: [
      "#40004b",
      "#762a83",
      "#9970ab",
      "#c2a5cf",
      "#e7d4e8",
      "#d9f0d3",
      "#a6dba0",
      "#5aae61",
      "#1b7837",
      "#00441b",
    ],
    11: [
      "#40004b",
      "#762a83",
      "#9970ab",
      "#c2a5cf",
      "#e7d4e8",
      "#f7f7f7",
      "#d9f0d3",
      "#a6dba0",
      "#5aae61",
      "#1b7837",
      "#00441b",
    ],
  },
  PiYG: {
    3: ["#e9a3c9", "#f7f7f7", "#a1d76a"],
    4: ["#d01c8b", "#f1b6da", "#b8e186", "#4dac26"],
    5: ["#d01c8b", "#f1b6da", "#f7f7f7", "#b8e186", "#4dac26"],
    6: ["#c51b7d", "#e9a3c9", "#fde0ef", "#e6f5d0", "#a1d76a", "#4d9221"],
    7: [
      "#c51b7d",
      "#e9a3c9",
      "#fde0ef",
      "#f7f7f7",
      "#e6f5d0",
      "#a1d76a",
      "#4d9221",
    ],
    8: [
      "#c51b7d",
      "#de77ae",
      "#f1b6da",
      "#fde0ef",
      "#e6f5d0",
      "#b8e186",
      "#7fbc41",
      "#4d9221",
    ],
    9: [
      "#c51b7d",
      "#de77ae",
      "#f1b6da",
      "#fde0ef",
      "#f7f7f7",
      "#e6f5d0",
      "#b8e186",
      "#7fbc41",
      "#4d9221",
    ],
    10: [
      "#8e0152",
      "#c51b7d",
      "#de77ae",
      "#f1b6da",
      "#fde0ef",
      "#e6f5d0",
      "#b8e186",
      "#7fbc41",
      "#4d9221",
      "#276419",
    ],
    11: [
      "#8e0152",
      "#c51b7d",
      "#de77ae",
      "#f1b6da",
      "#fde0ef",
      "#f7f7f7",
      "#e6f5d0",
      "#b8e186",
      "#7fbc41",
      "#4d9221",
      "#276419",
    ],
  },
  RdBu: {
    3: ["#ef8a62", "#f7f7f7", "#67a9cf"],
    4: ["#ca0020", "#f4a582", "#92c5de", "#0571b0"],
    5: ["#ca0020", "#f4a582", "#f7f7f7", "#92c5de", "#0571b0"],
    6: ["#b2182b", "#ef8a62", "#fddbc7", "#d1e5f0", "#67a9cf", "#2166ac"],
    7: [
      "#b2182b",
      "#ef8a62",
      "#fddbc7",
      "#f7f7f7",
      "#d1e5f0",
      "#67a9cf",
      "#2166ac",
    ],
    8: [
      "#b2182b",
      "#d6604d",
      "#f4a582",
      "#fddbc7",
      "#d1e5f0",
      "#92c5de",
      "#4393c3",
      "#2166ac",
    ],
    9: [
      "#b2182b",
      "#d6604d",
      "#f4a582",
      "#fddbc7",
      "#f7f7f7",
      "#d1e5f0",
      "#92c5de",
      "#4393c3",
      "#2166ac",
    ],
    10: [
      "#67001f",
      "#b2182b",
      "#d6604d",
      "#f4a582",
      "#fddbc7",
      "#d1e5f0",
      "#92c5de",
      "#4393c3",
      "#2166ac",
      "#053061",
    ],
    11: [
      "#67001f",
      "#b2182b",
      "#d6604d",
      "#f4a582",
      "#fddbc7",
      "#f7f7f7",
      "#d1e5f0",
      "#92c5de",
      "#4393c3",
      "#2166ac",
      "#053061",
    ],
  },
  RdGy: {
    3: ["#ef8a62", "#ffffff", "#999999"],
    4: ["#ca0020", "#f4a582", "#bababa", "#404040"],
    5: ["#ca0020", "#f4a582", "#ffffff", "#bababa", "#404040"],
    6: ["#b2182b", "#ef8a62", "#fddbc7", "#e0e0e0", "#999999", "#4d4d4d"],
    7: [
      "#b2182b",
      "#ef8a62",
      "#fddbc7",
      "#ffffff",
      "#e0e0e0",
      "#999999",
      "#4d4d4d",
    ],
    8: [
      "#b2182b",
      "#d6604d",
      "#f4a582",
      "#fddbc7",
      "#e0e0e0",
      "#bababa",
      "#878787",
      "#4d4d4d",
    ],
    9: [
      "#b2182b",
      "#d6604d",
      "#f4a582",
      "#fddbc7",
      "#ffffff",
      "#e0e0e0",
      "#bababa",
      "#878787",
      "#4d4d4d",
    ],
    10: [
      "#67001f",
      "#b2182b",
      "#d6604d",
      "#f4a582",
      "#fddbc7",
      "#e0e0e0",
      "#bababa",
      "#878787",
      "#4d4d4d",
      "#1a1a1a",
    ],
    11: [
      "#67001f",
      "#b2182b",
      "#d6604d",
      "#f4a582",
      "#fddbc7",
      "#ffffff",
      "#e0e0e0",
      "#bababa",
      "#878787",
      "#4d4d4d",
      "#1a1a1a",
    ],
  },
  RdYlBu: {
    3: ["#fc8d59", "#ffffbf", "#91bfdb"],
    4: ["#d7191c", "#fdae61", "#abd9e9", "#2c7bb6"],
    5: ["#d7191c", "#fdae61", "#ffffbf", "#abd9e9", "#2c7bb6"],
    6: ["#d73027", "#fc8d59", "#fee090", "#e0f3f8", "#91bfdb", "#4575b4"],
    7: [
      "#d73027",
      "#fc8d59",
      "#fee090",
      "#ffffbf",
      "#e0f3f8",
      "#91bfdb",
      "#4575b4",
    ],
    8: [
      "#d73027",
      "#f46d43",
      "#fdae61",
      "#fee090",
      "#e0f3f8",
      "#abd9e9",
      "#74add1",
      "#4575b4",
    ],
    9: [
      "#d73027",
      "#f46d43",
      "#fdae61",
      "#fee090",
      "#ffffbf",
      "#e0f3f8",
      "#abd9e9",
      "#74add1",
      "#4575b4",
    ],
    10: [
      "#a50026",
      "#d73027",
      "#f46d43",
      "#fdae61",
      "#fee090",
      "#e0f3f8",
      "#abd9e9",
      "#74add1",
      "#4575b4",
      "#313695",
    ],
    11: [
      "#a50026",
      "#d73027",
      "#f46d43",
      "#fdae61",
      "#fee090",
      "#ffffbf",
      "#e0f3f8",
      "#abd9e9",
      "#74add1",
      "#4575b4",
      "#313695",
    ],
  },
  Spectral: {
    3: ["#fc8d59", "#ffffbf", "#99d594"],
    4: ["#d7191c", "#fdae61", "#abdda4", "#2b83ba"],
    5: ["#d7191c", "#fdae61", "#ffffbf", "#abdda4", "#2b83ba"],
    6: ["#d53e4f", "#fc8d59", "#fee08b", "#e6f598", "#99d594", "#3288bd"],
    7: [
      "#d53e4f",
      "#fc8d59",
      "#fee08b",
      "#ffffbf",
      "#e6f598",
      "#99d594",
      "#3288bd",
    ],
    8: [
      "#d53e4f",
      "#f46d43",
      "#fdae61",
      "#fee08b",
      "#e6f598",
      "#abdda4",
      "#66c2a5",
      "#3288bd",
    ],
    9: [
      "#d53e4f",
      "#f46d43",
      "#fdae61",
      "#fee08b",
      "#ffffbf",
      "#e6f598",
      "#abdda4",
      "#66c2a5",
      "#3288bd",
    ],
    10: [
      "#9e0142",
      "#d53e4f",
      "#f46d43",
      "#fdae61",
      "#fee08b",
      "#e6f598",
      "#abdda4",
      "#66c2a5",
      "#3288bd",
      "#5e4fa2",
    ],
    11: [
      "#9e0142",
      "#d53e4f",
      "#f46d43",
      "#fdae61",
      "#fee08b",
      "#ffffbf",
      "#e6f598",
      "#abdda4",
      "#66c2a5",
      "#3288bd",
      "#5e4fa2",
    ],
  },
  RdYlGn: {
    3: ["#fc8d59", "#ffffbf", "#91cf60"],
    4: ["#d7191c", "#fdae61", "#a6d96a", "#1a9641"],
    5: ["#d7191c", "#fdae61", "#ffffbf", "#a6d96a", "#1a9641"],
    6: ["#d73027", "#fc8d59", "#fee08b", "#d9ef8b", "#91cf60", "#1a9850"],
    7: [
      "#d73027",
      "#fc8d59",
      "#fee08b",
      "#ffffbf",
      "#d9ef8b",
      "#91cf60",
      "#1a9850",
    ],
    8: [
      "#d73027",
      "#f46d43",
      "#fdae61",
      "#fee08b",
      "#d9ef8b",
      "#a6d96a",
      "#66bd63",
      "#1a9850",
    ],
    9: [
      "#d73027",
      "#f46d43",
      "#fdae61",
      "#fee08b",
      "#ffffbf",
      "#d9ef8b",
      "#a6d96a",
      "#66bd63",
      "#1a9850",
    ],
    10: [
      "#a50026",
      "#d73027",
      "#f46d43",
      "#fdae61",
      "#fee08b",
      "#d9ef8b",
      "#a6d96a",
      "#66bd63",
      "#1a9850",
      "#006837",
    ],
    11: [
      "#a50026",
      "#d73027",
      "#f46d43",
      "#fdae61",
      "#fee08b",
      "#ffffbf",
      "#d9ef8b",
      "#a6d96a",
      "#66bd63",
      "#1a9850",
      "#006837",
    ],
  },
  RdGn: {
    7: [
      "#e71007",
      "#c71007",
      "#a71007",
      "#871007",
      "#888",
      "#1a8850",
      "#1aa850",
      "#1ac850",
      "#1ae850",
    ],
  },
  Accent: {
    3: ["#7fc97f", "#beaed4", "#fdc086"],
    4: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99"],
    5: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0"],
    6: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f"],
    7: [
      "#7fc97f",
      "#beaed4",
      "#fdc086",
      "#ffff99",
      "#386cb0",
      "#f0027f",
      "#bf5b17",
    ],
    8: [
      "#7fc97f",
      "#beaed4",
      "#fdc086",
      "#ffff99",
      "#386cb0",
      "#f0027f",
      "#bf5b17",
      "#666666",
    ],
  },
  Dark2: {
    3: ["#1b9e77", "#d95f02", "#7570b3"],
    4: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a"],
    5: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e"],
    6: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02"],
    7: [
      "#1b9e77",
      "#d95f02",
      "#7570b3",
      "#e7298a",
      "#66a61e",
      "#e6ab02",
      "#a6761d",
    ],
    8: [
      "#1b9e77",
      "#d95f02",
      "#7570b3",
      "#e7298a",
      "#66a61e",
      "#e6ab02",
      "#a6761d",
      "#666666",
    ],
  },
  Paired: {
    3: ["#a6cee3", "#1f78b4", "#b2df8a"],
    4: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c"],
    5: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99"],
    6: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c"],
    7: [
      "#a6cee3",
      "#1f78b4",
      "#b2df8a",
      "#33a02c",
      "#fb9a99",
      "#e31a1c",
      "#fdbf6f",
    ],
    8: [
      "#a6cee3",
      "#1f78b4",
      "#b2df8a",
      "#33a02c",
      "#fb9a99",
      "#e31a1c",
      "#fdbf6f",
      "#ff7f00",
    ],
    9: [
      "#a6cee3",
      "#1f78b4",
      "#b2df8a",
      "#33a02c",
      "#fb9a99",
      "#e31a1c",
      "#fdbf6f",
      "#ff7f00",
      "#cab2d6",
    ],
    10: [
      "#a6cee3",
      "#1f78b4",
      "#b2df8a",
      "#33a02c",
      "#fb9a99",
      "#e31a1c",
      "#fdbf6f",
      "#ff7f00",
      "#cab2d6",
      "#6a3d9a",
    ],
    11: [
      "#a6cee3",
      "#1f78b4",
      "#b2df8a",
      "#33a02c",
      "#fb9a99",
      "#e31a1c",
      "#fdbf6f",
      "#ff7f00",
      "#cab2d6",
      "#6a3d9a",
      "#ffff99",
    ],
    12: [
      "#a6cee3",
      "#1f78b4",
      "#b2df8a",
      "#33a02c",
      "#fb9a99",
      "#e31a1c",
      "#fdbf6f",
      "#ff7f00",
      "#cab2d6",
      "#6a3d9a",
      "#ffff99",
      "#b15928",
    ],
  },
  Pastel1: {
    3: ["#fbb4ae", "#b3cde3", "#ccebc5"],
    4: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4"],
    5: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6"],
    6: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc"],
    7: [
      "#fbb4ae",
      "#b3cde3",
      "#ccebc5",
      "#decbe4",
      "#fed9a6",
      "#ffffcc",
      "#e5d8bd",
    ],
    8: [
      "#fbb4ae",
      "#b3cde3",
      "#ccebc5",
      "#decbe4",
      "#fed9a6",
      "#ffffcc",
      "#e5d8bd",
      "#fddaec",
    ],
    9: [
      "#fbb4ae",
      "#b3cde3",
      "#ccebc5",
      "#decbe4",
      "#fed9a6",
      "#ffffcc",
      "#e5d8bd",
      "#fddaec",
      "#f2f2f2",
    ],
  },
  Pastel2: {
    3: ["#b3e2cd", "#fdcdac", "#cbd5e8"],
    4: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4"],
    5: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9"],
    6: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae"],
    7: [
      "#b3e2cd",
      "#fdcdac",
      "#cbd5e8",
      "#f4cae4",
      "#e6f5c9",
      "#fff2ae",
      "#f1e2cc",
    ],
    8: [
      "#b3e2cd",
      "#fdcdac",
      "#cbd5e8",
      "#f4cae4",
      "#e6f5c9",
      "#fff2ae",
      "#f1e2cc",
      "#cccccc",
    ],
  },
  Set1: {
    3: ["#e41a1c", "#377eb8", "#4daf4a"],
    4: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3"],
    5: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"],
    6: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33"],
    7: [
      "#e41a1c",
      "#377eb8",
      "#4daf4a",
      "#984ea3",
      "#ff7f00",
      "#ffff33",
      "#a65628",
    ],
    8: [
      "#e41a1c",
      "#377eb8",
      "#4daf4a",
      "#984ea3",
      "#ff7f00",
      "#ffff33",
      "#a65628",
      "#f781bf",
    ],
    9: [
      "#e41a1c",
      "#377eb8",
      "#4daf4a",
      "#984ea3",
      "#ff7f00",
      "#ffff33",
      "#a65628",
      "#f781bf",
      "#999999",
    ],
  },
  Set2: {
    3: ["#66c2a5", "#fc8d62", "#8da0cb"],
    4: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"],
    5: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854"],
    6: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f"],
    7: [
      "#66c2a5",
      "#fc8d62",
      "#8da0cb",
      "#e78ac3",
      "#a6d854",
      "#ffd92f",
      "#e5c494",
    ],
    8: [
      "#66c2a5",
      "#fc8d62",
      "#8da0cb",
      "#e78ac3",
      "#a6d854",
      "#ffd92f",
      "#e5c494",
      "#b3b3b3",
    ],
  },
  Set3: {
    3: ["#8dd3c7", "#ffffb3", "#bebada"],
    4: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072"],
    5: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3"],
    6: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462"],
    7: [
      "#8dd3c7",
      "#ffffb3",
      "#bebada",
      "#fb8072",
      "#80b1d3",
      "#fdb462",
      "#b3de69",
    ],
    8: [
      "#8dd3c7",
      "#ffffb3",
      "#bebada",
      "#fb8072",
      "#80b1d3",
      "#fdb462",
      "#b3de69",
      "#fccde5",
    ],
    9: [
      "#8dd3c7",
      "#ffffb3",
      "#bebada",
      "#fb8072",
      "#80b1d3",
      "#fdb462",
      "#b3de69",
      "#fccde5",
      "#d9d9d9",
    ],
    10: [
      "#8dd3c7",
      "#ffffb3",
      "#bebada",
      "#fb8072",
      "#80b1d3",
      "#fdb462",
      "#b3de69",
      "#fccde5",
      "#d9d9d9",
      "#bc80bd",
    ],
    11: [
      "#8dd3c7",
      "#ffffb3",
      "#bebada",
      "#fb8072",
      "#80b1d3",
      "#fdb462",
      "#b3de69",
      "#fccde5",
      "#d9d9d9",
      "#bc80bd",
      "#ccebc5",
    ],
    12: [
      "#8dd3c7",
      "#ffffb3",
      "#bebada",
      "#fb8072",
      "#80b1d3",
      "#fdb462",
      "#b3de69",
      "#fccde5",
      "#d9d9d9",
      "#bc80bd",
      "#ccebc5",
      "#ffed6f",
    ],
  },
};
